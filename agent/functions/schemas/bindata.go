package schemas

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

func json_add_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x91,
		0x31, 0x4f, 0x03, 0x31, 0x0c, 0x85, 0xf7, 0xfe, 0x0a, 0xeb, 0xe8, 0xd8,
		0x72, 0x0c, 0x4c, 0xdd, 0x58, 0xd8, 0x90, 0x18, 0xd8, 0x10, 0x43, 0x7a,
		0xf1, 0x5d, 0x52, 0xa5, 0x49, 0x70, 0x1c, 0x10, 0x42, 0xfd, 0xef, 0xc4,
		0xc9, 0xf5, 0x54, 0x55, 0xb0, 0xb0, 0x9d, 0x9f, 0xdf, 0xf7, 0x6c, 0x5f,
		0xbe, 0x57, 0x00, 0x9d, 0xd5, 0xdd, 0x0e, 0xba, 0x5e, 0x69, 0xdd, 0x6d,
		0xa4, 0x5e, 0xa7, 0xc1, 0xe0, 0x51, 0x89, 0x68, 0x98, 0xe3, 0xae, 0xef,
		0x0f, 0x29, 0xf8, 0x6d, 0x53, 0x6f, 0x03, 0x4d, 0xbd, 0x26, 0x35, 0xf2,
		0xf6, 0xee, 0xbe, 0x6f, 0xda, 0x4d, 0xe3, 0xd8, 0xb2, 0x43, 0xa1, 0xd6,
		0x4b, 0xd4, 0x44, 0x21, 0x47, 0x91, 0x9e, 0x14, 0x1b, 0x78, 0xcc, 0x7e,
		0x60, 0x1b, 0x7c, 0x6a, 0x4d, 0x42, 0xce, 0xe4, 0x4b, 0x57, 0xb6, 0x10,
		0xfe, 0x2b, 0x56, 0xdc, 0xe7, 0xe3, 0x1e, 0xa9, 0x7a, 0x8a, 0xaa, 0x31,
		0x0d, 0x64, 0xa3, 0x70, 0xd2, 0x7c, 0x31, 0x08, 0x84, 0x29, 0x3b, 0x86,
		0x30, 0x02, 0x97, 0xaa, 0x0c, 0xb3, 0xb5, 0x5b, 0xfc, 0xa7, 0x1a, 0x7c,
		0x85, 0x3c, 0x68, 0x9d, 0x80, 0x3f, 0x03, 0x7c, 0x28, 0x97, 0xb1, 0x7c,
		0x86, 0x09, 0x0b, 0x48, 0xf3, 0xd6, 0xf3, 0xd4, 0xb0, 0x3f, 0xe0, 0xc0,
		0x4d, 0x3b, 0x47, 0x2a, 0xf7, 0x4c, 0x21, 0x22, 0xb1, 0xc5, 0x54, 0x3c,
		0xa3, 0x72, 0x09, 0xab, 0x21, 0x5e, 0xca, 0xf3, 0xfa, 0x0e, 0x47, 0x5e,
		0xaa, 0xbf, 0xce, 0xf9, 0xfd, 0x20, 0x41, 0x41, 0x12, 0x95, 0xd7, 0x5d,
		0xf5, 0x9d, 0xe6, 0xeb, 0xc9, 0x4e, 0xe6, 0xbf, 0xa9, 0x95, 0xbd, 0x8a,
		0x5d, 0xfe, 0x11, 0xe1, 0x7b, 0xb6, 0x84, 0xf2, 0xf4, 0xaf, 0x17, 0xfb,
		0x6f, 0xce, 0x23, 0x8b, 0xf6, 0xb6, 0x3a, 0xfd, 0x04, 0x00, 0x00, 0xff,
		0xff, 0x48, 0x05, 0x4d, 0x8d, 0x20, 0x02, 0x00, 0x00,
	},
		"json/add.json",
	)
}

func json_aggregate_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x54,
		0xb1, 0x8e, 0xdb, 0x30, 0x0c, 0xdd, 0xf3, 0x15, 0x84, 0x7b, 0x63, 0xae,
		0xee, 0xd0, 0xe9, 0xb6, 0xa2, 0x53, 0x97, 0xa2, 0xc3, 0x15, 0x28, 0x70,
		0xc8, 0xc0, 0x58, 0x8c, 0xad, 0x83, 0x2d, 0xa9, 0x12, 0x9d, 0xb6, 0x28,
		0xf2, 0xef, 0x15, 0x2d, 0xd9, 0x56, 0x52, 0xb7, 0x07, 0xdc, 0x12, 0x84,
		0x34, 0xc9, 0xf7, 0xf8, 0xf8, 0xec, 0xdf, 0x3b, 0x80, 0x4a, 0xab, 0xea,
		0x01, 0xaa, 0x1a, 0xdb, 0xd6, 0x53, 0x8b, 0x4c, 0xd5, 0x5e, 0xb2, 0x77,
		0xa1, 0xe9, 0x68, 0x40, 0x79, 0xd4, 0x31, 0xbb, 0x87, 0xba, 0x7e, 0x0e,
		0xd6, 0xdc, 0xa7, 0xec, 0x5b, 0xeb, 0xdb, 0x5a, 0x79, 0x3c, 0xf1, 0xfd,
		0xbb, 0xf7, 0x75, 0xca, 0xbd, 0x49, 0x7d, 0xac, 0xb9, 0x27, 0xe9, 0xba,
		0xbb, 0x19, 0xd8, 0x7a, 0x3b, 0x3a, 0x79, 0xf0, 0x21, 0xe7, 0xb5, 0x35,
		0x01, 0xd0, 0x28, 0x78, 0xd4, 0x03, 0x05, 0xf2, 0x9a, 0x42, 0xaa, 0x54,
		0x14, 0x1a, 0xaf, 0x9d, 0x14, 0x48, 0xfd, 0x47, 0x3b, 0xb8, 0x91, 0x49,
		0x6a, 0xc1, 0x3a, 0xf2, 0x53, 0x27, 0xd8, 0x33, 0x79, 0x68, 0xc8, 0x33,
		0x6a, 0x03, 0x0b, 0x14, 0x9c, 0xb1, 0x1f, 0x63, 0xe9, 0xc9, 0xdb, 0x01,
		0x10, 0xca, 0xa9, 0x9e, 0x78, 0xf4, 0x32, 0x50, 0x96, 0x16, 0xa2, 0xbf,
		0xdc, 0xc4, 0xf3, 0xc9, 0x1e, 0x9f, 0xa9, 0xe1, 0xc3, 0x54, 0xf5, 0x37,
		0xfa, 0x63, 0x47, 0xe0, 0x29, 0x8c, 0x3d, 0x83, 0x3d, 0x01, 0x4f, 0xd1,
		0xf7, 0x08, 0xc1, 0xa4, 0x16, 0x58, 0x29, 0xcd, 0xdd, 0xce, 0x0b, 0x45,
		0x16, 0xd4, 0x19, 0x49, 0xb0, 0xca, 0xa8, 0xc0, 0xd6, 0x86, 0xa9, 0x25,
		0x9f, 0x9b, 0xff, 0x05, 0xff, 0xf5, 0xf3, 0xa7, 0x6f, 0xc0, 0x22, 0x12,
		0xe3, 0xe0, 0x84, 0x06, 0x61, 0xd3, 0xad, 0x4b, 0x2b, 0x50, 0xc8, 0x08,
		0xce, 0xc6, 0x71, 0x55, 0x9e, 0x74, 0x99, 0x47, 0x56, 0x93, 0x22, 0xdb,
		0xf0, 0x66, 0x1c, 0x8e, 0x2f, 0xa2, 0xff, 0x1f, 0x66, 0x37, 0xff, 0x5e,
		0xd2, 0xf5, 0xf3, 0xe4, 0xa4, 0x69, 0x12, 0x1e, 0x95, 0xd2, 0x32, 0x10,
		0xfb, 0x2f, 0xa5, 0x38, 0x27, 0xec, 0x03, 0x4d, 0x05, 0x1b, 0x9a, 0x55,
		0xd6, 0x5d, 0xe9, 0x97, 0xc7, 0x06, 0xf6, 0xda, 0xb4, 0x0b, 0xe1, 0x2d,
		0xba, 0xab, 0x43, 0xd8, 0xc2, 0x91, 0xa0, 0x49, 0xee, 0x51, 0x6b, 0x13,
		0xc5, 0xb5, 0x63, 0xf5, 0xd3, 0xba, 0x75, 0x88, 0x89, 0x42, 0x04, 0x3c,
		0xb7, 0x65, 0x38, 0xe0, 0xcf, 0xab, 0x50, 0x9b, 0x32, 0x6c, 0xec, 0xb8,
		0xca, 0x71, 0xd8, 0x15, 0xda, 0x57, 0xd9, 0x7d, 0xaf, 0xdb, 0xc3, 0xe0,
		0x40, 0xb3, 0xe3, 0xd2, 0x20, 0x59, 0xe8, 0x47, 0xa7, 0xe3, 0xe5, 0x25,
		0x37, 0x9d, 0x15, 0x74, 0xc8, 0x6b, 0xa2, 0x73, 0x64, 0x54, 0x5c, 0xf3,
		0x8a, 0x81, 0xf8, 0xcb, 0xc7, 0xca, 0x2d, 0x0e, 0xb7, 0xde, 0xdb, 0x22,
		0x31, 0xf7, 0xc7, 0x3f, 0x91, 0x44, 0x63, 0x8d, 0x8a, 0x6f, 0x21, 0x67,
		0x16, 0x93, 0x1b, 0x22, 0x81, 0xd5, 0x20, 0xd7, 0xe0, 0x49, 0x99, 0x57,
		0x22, 0x27, 0x6b, 0x8a, 0x00, 0x33, 0x87, 0x69, 0xd3, 0xf5, 0x9b, 0x72,
		0x63, 0x3c, 0x79, 0x29, 0xb5, 0x27, 0xb5, 0x1c, 0x56, 0x1c, 0xb4, 0x5f,
		0x6e, 0xb0, 0x2f, 0xb4, 0xd8, 0x17, 0x47, 0x3b, 0xec, 0x2e, 0x7f, 0x02,
		0x00, 0x00, 0xff, 0xff, 0x41, 0x4d, 0xb4, 0xf9, 0x04, 0x05, 0x00, 0x00,
	},
		"json/aggregate.json",
	)
}

func json_anomaly_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xac, 0x94,
		0xcf, 0x6e, 0xd4, 0x40, 0x0c, 0xc6, 0xef, 0xfb, 0x14, 0x56, 0xe8, 0xb1,
		0x25, 0x1c, 0x38, 0xed, 0x0d, 0x89, 0x0b, 0x17, 0xe0, 0x50, 0x24, 0x24,
		0x84, 0x54, 0x6f, 0xc6, 0x49, 0xa6, 0x64, 0xc6, 0x61, 0xc6, 0x61, 0xb5,
		0xa0, 0xbc, 0x3b, 0xf3, 0x27, 0x89, 0x12, 0x36, 0x80, 0x2a, 0xf5, 0x52,
		0x75, 0x6c, 0xcf, 0xe7, 0x9f, 0xbf, 0x71, 0xf6, 0xd7, 0x01, 0xa0, 0xd0,
		0xaa, 0x38, 0x42, 0x51, 0xa2, 0x65, 0x83, 0xdd, 0xa5, 0xb8, 0x8d, 0xb1,
		0x1b, 0x5f, 0xb5, 0x64, 0x30, 0x26, 0x5a, 0x91, 0xfe, 0x58, 0x96, 0x8f,
		0x9e, 0xed, 0x5d, 0x8e, 0xbe, 0x64, 0xd7, 0x94, 0xca, 0x61, 0x2d, 0x77,
		0xaf, 0x5e, 0x97, 0x39, 0xf6, 0x22, 0xdf, 0x13, 0x2d, 0x1d, 0xc5, 0x5b,
		0x37, 0x1b, 0xb9, 0xc6, 0xf1, 0xd0, 0xc7, 0xf0, 0x9b, 0xa6, 0x71, 0xd4,
		0xa0, 0x68, 0xb6, 0x1e, 0xd0, 0x2a, 0xb8, 0xd7, 0x86, 0x3c, 0x39, 0x4d,
		0x3e, 0x57, 0x2a, 0xf2, 0x95, 0xd3, 0x7d, 0x2c, 0x88, 0xf5, 0x6f, 0x49,
		0xc8, 0x19, 0x6d, 0xc9, 0xc3, 0xb9, 0x25, 0x69, 0xc9, 0x01, 0xc2, 0x0f,
		0xec, 0x06, 0x02, 0xed, 0xc1, 0xb0, 0x23, 0x90, 0x16, 0x6d, 0xf8, 0xe3,
		0x88, 0xc0, 0xeb, 0xc6, 0x60, 0xd0, 0x3d, 0xe3, 0x05, 0x6a, 0xc7, 0x26,
		0x84, 0x09, 0x0c, 0x85, 0x7c, 0xbe, 0xc2, 0x35, 0x54, 0xe4, 0x04, 0xb5,
		0x05, 0x85, 0x82, 0xd0, 0xb3, 0xb6, 0xe2, 0x21, 0x1c, 0x11, 0xd6, 0x10,
		0x8e, 0x64, 0x70, 0xb1, 0x7f, 0xf4, 0x27, 0x4e, 0x75, 0xe9, 0xd3, 0x50,
		0x27, 0xe6, 0x2e, 0xa8, 0xa5, 0xa2, 0x6b, 0xd6, 0x07, 0x71, 0x03, 0x3d,
		0x80, 0xae, 0x53, 0xdb, 0x05, 0x32, 0x1b, 0xc1, 0x83, 0x2f, 0xc2, 0xad,
		0x31, 0xbb, 0x34, 0xe9, 0xf1, 0xe9, 0x91, 0x2a, 0xc9, 0x3d, 0x51, 0x29,
		0x1d, 0x95, 0xb0, 0xfb, 0xe8, 0xb8, 0x0f, 0x94, 0x91, 0xe6, 0x08, 0x35,
		0x76, 0x9e, 0x52, 0x41, 0xbf, 0x0e, 0x4f, 0x60, 0x13, 0xf4, 0x7c, 0x5e,
		0x49, 0x7b, 0x71, 0xda, 0x36, 0x13, 0xe9, 0x35, 0xeb, 0x7d, 0x20, 0xb4,
		0x68, 0x92, 0x25, 0x91, 0x36, 0x0b, 0x45, 0x2f, 0x05, 0x2a, 0xb6, 0xd1,
		0x22, 0x9f, 0x12, 0x6b, 0x9f, 0x84, 0xe1, 0x44, 0x61, 0x9e, 0xf0, 0xac,
		0x3f, 0x49, 0x15, 0x49, 0x7a, 0x9c, 0xbc, 0x48, 0xe3, 0xee, 0x81, 0xd8,
		0xc1, 0x9c, 0xc8, 0xfd, 0x13, 0x24, 0x5b, 0x15, 0xd4, 0xc3, 0x26, 0x55,
		0xdf, 0xb6, 0xba, 0x61, 0x64, 0xcd, 0x6a, 0x2d, 0xcc, 0x96, 0x3e, 0xd4,
		0x21, 0xf0, 0x65, 0x0a, 0xc0, 0x92, 0xda, 0xf4, 0x5d, 0x79, 0xbb, 0xe4,
		0xfe, 0xe7, 0xf1, 0x52, 0xb8, 0xe3, 0xf5, 0x92, 0x8b, 0x8b, 0x75, 0x15,
		0x5d, 0x35, 0x0e, 0x56, 0x51, 0xb3, 0x9a, 0x78, 0x29, 0xd8, 0x99, 0x5c,
		0xdb, 0xc0, 0x83, 0x1d, 0x7c, 0x7a, 0xff, 0xee, 0x33, 0x48, 0xfc, 0x14,
		0x04, 0x4d, 0x9f, 0x77, 0xf7, 0xdc, 0xea, 0xaa, 0x4d, 0xae, 0xb0, 0xe9,
		0x07, 0xa1, 0xf4, 0x1c, 0xf5, 0x60, 0xab, 0x24, 0xb0, 0x11, 0x1f, 0xb7,
		0xbd, 0x0a, 0xe1, 0xe7, 0x02, 0xac, 0xb5, 0xbd, 0xc6, 0x0b, 0x4c, 0x4f,
		0x81, 0x3b, 0xec, 0xfd, 0xbf, 0x42, 0xde, 0x7d, 0xbe, 0x3f, 0xd6, 0xe6,
		0x6f, 0x7c, 0xb9, 0x2c, 0x6e, 0xb1, 0xa7, 0xb0, 0xb7, 0xca, 0x67, 0xef,
		0x2c, 0x9f, 0x9f, 0x64, 0xe2, 0xcc, 0xf5, 0xf5, 0x30, 0x9f, 0xc6, 0xe9,
		0x87, 0xe0, 0xfb, 0xa0, 0x1d, 0xa9, 0x65, 0xdd, 0xe6, 0x2f, 0xee, 0x76,
		0xde, 0xf8, 0x43, 0xbc, 0x34, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x3f,
		0x5f, 0xf6, 0x13, 0x48, 0x05, 0x00, 0x00,
	},
		"json/anomaly.json",
	)
}

func json_compute_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xac, 0x54,
		0xc1, 0x8e, 0xd4, 0x30, 0x0c, 0xbd, 0xcf, 0x57, 0x58, 0x65, 0x8f, 0xb3,
		0x94, 0x03, 0xa7, 0xb9, 0x21, 0x4e, 0x5c, 0x80, 0xc3, 0x22, 0x21, 0x21,
		0x0e, 0x99, 0xc6, 0x6d, 0xb3, 0x6a, 0x93, 0x90, 0xb8, 0xb3, 0x2c, 0xab,
		0xfe, 0x3b, 0x76, 0xd3, 0x6d, 0x53, 0x4d, 0x11, 0x5a, 0xc4, 0x5c, 0x26,
		0x76, 0x9e, 0xed, 0x97, 0x67, 0xbb, 0x4f, 0x07, 0x80, 0xc2, 0xe8, 0xe2,
		0x04, 0x45, 0x59, 0xb9, 0xde, 0x0f, 0x84, 0xc5, 0x51, 0x7c, 0x37, 0xb1,
		0x6a, 0xb1, 0x57, 0x72, 0xd1, 0x12, 0xf9, 0x53, 0x59, 0xde, 0x47, 0x67,
		0x6f, 0x93, 0xf7, 0xb5, 0x0b, 0x4d, 0xa9, 0x83, 0xaa, 0xe9, 0xf6, 0xcd,
		0xdb, 0x32, 0xf9, 0x5e, 0xa5, 0x38, 0x32, 0xd4, 0xa1, 0x44, 0xdd, 0x6c,
		0xd2, 0x35, 0xc1, 0x0d, 0x5e, 0xdc, 0xef, 0x9a, 0x26, 0x60, 0xa3, 0xc8,
		0x38, 0x1b, 0x41, 0x59, 0x0d, 0x77, 0xa6, 0xc7, 0x88, 0xc1, 0x60, 0x4c,
		0x48, 0x8d, 0xb1, 0x0a, 0xc6, 0x0b, 0x40, 0xf0, 0xef, 0x53, 0x16, 0xc1,
		0x82, 0xf3, 0x18, 0xa6, 0x48, 0x70, 0x17, 0x0c, 0x40, 0x2d, 0xc2, 0x45,
		0x75, 0x03, 0x5f, 0xba, 0x1a, 0x2a, 0x0c, 0xa4, 0x8c, 0x05, 0xad, 0x48,
		0x81, 0x77, 0xc6, 0x52, 0x04, 0x36, 0x15, 0xe4, 0xc9, 0x03, 0xd2, 0x10,
		0x24, 0xaf, 0xbc, 0x5b, 0xd8, 0x3e, 0xfa, 0x89, 0xac, 0x1d, 0xfa, 0x33,
		0x86, 0x09, 0x73, 0x4d, 0xe1, 0x8e, 0xeb, 0x04, 0x8c, 0x43, 0x47, 0x52,
		0x87, 0x26, 0xeb, 0x07, 0x57, 0x25, 0xd4, 0x2b, 0xa5, 0x82, 0x43, 0xc7,
		0xa4, 0xc0, 0x9c, 0xd3, 0x9d, 0xef, 0xb1, 0xa2, 0x54, 0x57, 0x69, 0x6d,
		0x04, 0xa5, 0xba, 0xcf, 0x41, 0x42, 0x48, 0x18, 0x9d, 0xa0, 0x56, 0x5d,
		0xc4, 0x09, 0xe0, 0x73, 0xf7, 0x4c, 0xce, 0xf9, 0xe5, 0x9c, 0xa5, 0x8d,
		0x14, 0x8c, 0x6d, 0x66, 0xaa, 0xfb, 0x64, 0x57, 0x9d, 0xc8, 0xc1, 0x19,
		0x61, 0xee, 0x84, 0x5e, 0x83, 0x90, 0x1f, 0xcc, 0xe8, 0x6f, 0xb3, 0xcd,
		0x9e, 0xc8, 0x8e, 0xe3, 0x6a, 0xaa, 0x4b, 0x93, 0x9b, 0xbd, 0xfa, 0xb9,
		0x31, 0x8d, 0xcd, 0xcd, 0xca, 0x0d, 0x96, 0x72, 0x47, 0x24, 0xad, 0xf1,
		0x52, 0xcc, 0x8e, 0xef, 0xd3, 0xff, 0x38, 0x8b, 0x3b, 0xb7, 0xe3, 0xdf,
		0x5e, 0x66, 0x55, 0x8f, 0xcf, 0x4d, 0x48, 0x89, 0xf8, 0xa8, 0x88, 0x5f,
		0x68, 0xa5, 0xf9, 0x71, 0xba, 0xc8, 0x27, 0x20, 0x09, 0xa0, 0x58, 0xf8,
		0xc7, 0x5f, 0x2c, 0xc0, 0x86, 0x09, 0xab, 0x64, 0x9c, 0xce, 0x99, 0x38,
		0x8b, 0x9f, 0xea, 0x8d, 0x2e, 0x4f, 0xcb, 0x69, 0xbf, 0xb3, 0xab, 0x60,
		0x7f, 0xe9, 0xf0, 0x02, 0xdc, 0xe9, 0xf4, 0x72, 0x57, 0x07, 0xd7, 0x5f,
		0x79, 0xb3, 0xc2, 0xfc, 0x24, 0x6c, 0x96, 0x39, 0xcd, 0x00, 0x3b, 0x52,
		0x19, 0xcb, 0x7c, 0x54, 0x07, 0x5f, 0x3e, 0x7e, 0xf8, 0x0a, 0x24, 0x4b,
		0x46, 0xaa, 0xf7, 0x20, 0x25, 0xe0, 0xa1, 0x35, 0x55, 0x2b, 0xda, 0xcc,
		0x93, 0x31, 0xc9, 0x56, 0x0f, 0xb6, 0x7a, 0x9e, 0xe4, 0xf5, 0x37, 0x6e,
		0x6b, 0x15, 0xe4, 0xfe, 0x17, 0xc1, 0xda, 0xd8, 0x6b, 0x7a, 0xcc, 0xe9,
		0x25, 0xe4, 0x0e, 0x7b, 0xe7, 0x8c, 0xf2, 0x6e, 0xfb, 0x36, 0xcb, 0xfe,
		0x67, 0x7e, 0x09, 0x26, 0xd3, 0x16, 0x91, 0xe7, 0x4b, 0x47, 0x9e, 0xa4,
		0xda, 0x05, 0xbe, 0x70, 0x0f, 0x2f, 0x92, 0x71, 0xdc, 0xee, 0xc1, 0xf2,
		0xa1, 0x90, 0xaf, 0x88, 0x09, 0xa8, 0x97, 0x81, 0x93, 0x8d, 0x3f, 0x2e,
		0x1b, 0x72, 0x90, 0x88, 0xf1, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x98,
		0x74, 0xbf, 0x26, 0xa1, 0x05, 0x00, 0x00,
	},
		"json/compute.json",
	)
}

func json_div_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x91,
		0xb1, 0x6e, 0xf3, 0x30, 0x0c, 0x84, 0xf7, 0x3c, 0x05, 0xe1, 0x3f, 0x63,
		0xf2, 0xbb, 0x43, 0x27, 0xcf, 0x45, 0xb7, 0x02, 0x1d, 0xba, 0x15, 0x1d,
		0x14, 0x8b, 0xb6, 0x15, 0x28, 0x92, 0x4a, 0x51, 0x29, 0x8a, 0xc2, 0xef,
		0x5e, 0x51, 0x72, 0x8c, 0x20, 0x68, 0x97, 0x8e, 0x3c, 0xde, 0x77, 0x24,
		0xa5, 0xaf, 0x0d, 0x40, 0x63, 0x74, 0xd3, 0x41, 0xd3, 0x6a, 0x73, 0x6e,
		0x76, 0x52, 0x6f, 0x63, 0x3f, 0xe1, 0x49, 0x89, 0x38, 0x31, 0x87, 0xae,
		0x6d, 0x8f, 0xd1, 0xbb, 0x7d, 0x55, 0xff, 0x7b, 0x1a, 0x5b, 0x4d, 0x6a,
		0xe0, 0xfd, 0xdd, 0x7d, 0x5b, 0xb5, 0x7f, 0x95, 0x63, 0xc3, 0x16, 0x85,
		0xda, 0xae, 0x51, 0x23, 0xf9, 0x14, 0x44, 0x7a, 0x52, 0x3c, 0xc1, 0x63,
		0x72, 0x3d, 0x1b, 0xef, 0x62, 0x6d, 0x12, 0x72, 0x22, 0x97, 0xbb, 0xb2,
		0x85, 0xf0, 0x9f, 0xa1, 0xe0, 0x2e, 0x9d, 0x0e, 0x48, 0xc5, 0x93, 0x55,
		0x8d, 0xb1, 0x27, 0x13, 0x84, 0x93, 0xe6, 0xcb, 0x84, 0x40, 0x18, 0x93,
		0x65, 0xf0, 0x03, 0x70, 0xae, 0xf2, 0x30, 0x13, 0xa5, 0x9b, 0xfd, 0x73,
		0x09, 0xbe, 0x41, 0x1e, 0xb2, 0x21, 0x4b, 0xc0, 0x1f, 0x1e, 0xce, 0xca,
		0x26, 0x5c, 0xe6, 0x5f, 0xe6, 0xf9, 0xc3, 0x11, 0x7b, 0xae, 0x9a, 0xd2,
		0xda, 0x08, 0xa7, 0xec, 0x33, 0xf9, 0x80, 0xc4, 0x26, 0xbb, 0x3b, 0x18,
		0x94, 0x8d, 0x58, 0x0c, 0xe1, 0x5a, 0x5e, 0x16, 0xb7, 0x38, 0xf0, 0x5a,
		0xfd, 0x76, 0xc8, 0xcf, 0xa7, 0x08, 0x0a, 0x92, 0xa8, 0x9c, 0x6e, 0x8a,
		0x6f, 0x5e, 0xee, 0x26, 0x33, 0x4e, 0x7f, 0x4d, 0x2d, 0xec, 0x4d, 0xec,
		0xfa, 0x3a, 0x84, 0xef, 0xc9, 0x10, 0xca, 0xa7, 0xbf, 0x5e, 0xed, 0xbf,
		0xbb, 0x8c, 0xcc, 0xda, 0xdb, 0x66, 0xfe, 0x0e, 0x00, 0x00, 0xff, 0xff,
		0xe1, 0x93, 0x18, 0x5d, 0x1a, 0x02, 0x00, 0x00,
	},
		"json/div.json",
	)
}

func json_eq_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x92,
		0x3f, 0x6f, 0xc2, 0x30, 0x10, 0xc5, 0x77, 0x3e, 0xc5, 0xc9, 0x65, 0x84,
		0xa6, 0x43, 0x27, 0x56, 0xa4, 0xce, 0x1d, 0xba, 0x55, 0x1d, 0x0c, 0xbe,
		0x10, 0x23, 0xe3, 0x33, 0xe7, 0x73, 0x11, 0xaa, 0xf2, 0xdd, 0xeb, 0x3f,
		0x01, 0x45, 0xa8, 0x53, 0xb7, 0xdc, 0xcb, 0x7b, 0xbf, 0xfb, 0x23, 0xff,
		0x2c, 0x00, 0x94, 0x35, 0x6a, 0x03, 0xaa, 0xc3, 0xb3, 0x5a, 0x95, 0x72,
		0x19, 0xf7, 0x03, 0x9e, 0x74, 0xd1, 0x06, 0x91, 0xb0, 0xe9, 0xba, 0x63,
		0x24, 0xbf, 0x6e, 0xea, 0x33, 0xf1, 0xa1, 0x33, 0xac, 0x7b, 0x59, 0xbf,
		0xbc, 0x76, 0x4d, 0x7b, 0x6a, 0x39, 0xb1, 0xe2, 0xb0, 0xa4, 0x96, 0x37,
		0xd2, 0x81, 0x29, 0x85, 0xa2, 0x6c, 0xe9, 0x14, 0x34, 0xdb, 0x8c, 0x01,
		0xed, 0x0d, 0xbc, 0x39, 0xba, 0xc0, 0x96, 0xbc, 0x30, 0xb9, 0xe6, 0x64,
		0x94, 0xc4, 0x3e, 0x5b, 0xcb, 0x40, 0x85, 0x75, 0x0d, 0x15, 0xb5, 0x23,
		0x72, 0xa8, 0x7d, 0x35, 0x65, 0xd9, 0x60, 0xdc, 0xb3, 0x0d, 0x62, 0xa9,
		0x78, 0xd5, 0xc7, 0x80, 0xc0, 0x18, 0x93, 0x13, 0xa0, 0x1e, 0x24, 0x57,
		0x14, 0x90, 0x75, 0xfd, 0x9d, 0x03, 0x63, 0x45, 0x3f, 0x64, 0xda, 0x28,
		0x18, 0x41, 0x2e, 0x04, 0xdf, 0xda, 0xa5, 0xfc, 0xd9, 0x13, 0x03, 0x9e,
		0x93, 0x76, 0x56, 0xae, 0xd3, 0x2e, 0x53, 0x7f, 0xda, 0x1d, 0x71, 0x2f,
		0x4d, 0xd3, 0xc6, 0xd8, 0x42, 0xd1, 0xee, 0x9d, 0x4b, 0x1f, 0xb1, 0x18,
		0xb3, 0xa7, 0xd7, 0x2e, 0x62, 0x35, 0x84, 0xb9, 0x3c, 0x2d, 0xe2, 0xb0,
		0x97, 0x7b, 0x35, 0x03, 0xfb, 0x74, 0xda, 0x21, 0x4f, 0x7b, 0xfd, 0xbd,
		0x59, 0x89, 0xb6, 0x85, 0xbc, 0x51, 0xd5, 0x37, 0x4e, 0x67, 0x60, 0x7b,
		0x18, 0xfe, 0x4b, 0xad, 0xd9, 0x07, 0xec, 0xfd, 0x56, 0x9c, 0xaf, 0x60,
		0x19, 0xcb, 0x7b, 0xf8, 0x9c, 0xcd, 0xbf, 0xba, 0xb5, 0xcc, 0xda, 0xd7,
		0x62, 0xfc, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xae, 0x69, 0xfb, 0x73, 0x35,
		0x02, 0x00, 0x00,
	},
		"json/eq.json",
	)
}

func json_extract_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x94, 0x53,
		0xc1, 0x8e, 0xd4, 0x30, 0x0c, 0xbd, 0xef, 0x57, 0x58, 0x61, 0x8e, 0xb3,
		0x53, 0x90, 0x38, 0x2d, 0x27, 0x0e, 0x20, 0x71, 0x82, 0x03, 0x7b, 0x42,
		0x48, 0x93, 0x6d, 0xdc, 0x69, 0x96, 0x36, 0x29, 0x89, 0xc3, 0x30, 0x42,
		0xf3, 0xef, 0xd8, 0x4d, 0xb6, 0x9b, 0x32, 0xbb, 0x48, 0x7b, 0x6b, 0x5f,
		0x9e, 0xed, 0xe7, 0x67, 0xfb, 0xcf, 0x15, 0x80, 0xb2, 0x46, 0xdd, 0x80,
		0x6a, 0xf0, 0x37, 0x05, 0xdd, 0x92, 0xda, 0x0a, 0xb6, 0x89, 0x6d, 0x8f,
		0xa3, 0x96, 0x87, 0x9e, 0x68, 0xba, 0x69, 0x9a, 0xfb, 0xe8, 0xdd, 0x75,
		0x46, 0x77, 0x3e, 0x1c, 0x1a, 0x13, 0x74, 0x47, 0xd7, 0xaf, 0xdf, 0x36,
		0x19, 0x7b, 0x95, 0xe3, 0xc8, 0xd2, 0x80, 0x12, 0xb5, 0x59, 0xa5, 0x3b,
		0x04, 0x9f, 0x26, 0x81, 0x6f, 0xc9, 0x0e, 0x96, 0x4e, 0xf0, 0x31, 0xb9,
		0x96, 0xac, 0x77, 0x31, 0xbf, 0x1b, 0x8c, 0x6d, 0xb0, 0x93, 0x20, 0xc2,
		0xfa, 0x90, 0x63, 0x23, 0x78, 0x87, 0xe0, 0x03, 0x8c, 0x3e, 0x20, 0x38,
		0x3d, 0xa2, 0x81, 0x29, 0xf8, 0x09, 0x03, 0x59, 0x8c, 0xd0, 0x05, 0x3f,
		0x82, 0x86, 0x5e, 0xc7, 0x1e, 0xac, 0x23, 0xcf, 0xdf, 0x0e, 0x8f, 0xf3,
		0x7f, 0xce, 0x1a, 0x90, 0x52, 0x90, 0x84, 0xd2, 0xa6, 0x88, 0x3b, 0x4d,
		0xb3, 0x36, 0x7f, 0x77, 0x8f, 0x45, 0xd9, 0x65, 0xed, 0xf7, 0x4b, 0x12,
		0x38, 0x5a, 0xea, 0x81, 0x7a, 0x84, 0x80, 0x3f, 0x13, 0x46, 0x5a, 0x95,
		0x7f, 0x07, 0xb6, 0x83, 0xbd, 0x68, 0xd8, 0x83, 0x8d, 0xa0, 0x1d, 0xe8,
		0x10, 0xf4, 0x69, 0x5b, 0x02, 0x62, 0x1a, 0xa8, 0xc6, 0xc1, 0x77, 0xb5,
		0xf6, 0xe2, 0x0e, 0x67, 0x9c, 0xbb, 0x40, 0xdd, 0x72, 0x0f, 0x84, 0xa3,
		0xd0, 0x72, 0xd2, 0x1d, 0xdc, 0x46, 0x84, 0xfd, 0x66, 0xb2, 0xed, 0x8f,
		0x3d, 0x70, 0x77, 0x25, 0x84, 0xbb, 0x8c, 0xd6, 0x1d, 0x06, 0x7c, 0x48,
		0x77, 0xda, 0x29, 0x6e, 0xe4, 0x9c, 0xed, 0xbf, 0xec, 0x50, 0x69, 0x63,
		0xac, 0x34, 0xa7, 0x87, 0x2f, 0x4b, 0x7d, 0xe6, 0x74, 0x7a, 0x88, 0x38,
		0x13, 0xa6, 0x1a, 0x2e, 0x56, 0x09, 0xf6, 0xf8, 0x5b, 0x65, 0x9e, 0x9b,
		0x29, 0xd6, 0xc9, 0xee, 0xb0, 0xe6, 0x99, 0x57, 0x18, 0xc0, 0x94, 0x48,
		0x81, 0x05, 0xaa, 0x2c, 0x69, 0x66, 0x8d, 0xd6, 0x7d, 0x2a, 0xc4, 0x37,
		0x0b, 0x98, 0x9c, 0x65, 0x57, 0x1f, 0x70, 0x0a, 0x09, 0x97, 0xa7, 0x7f,
		0x46, 0xf2, 0xb5, 0xcf, 0xd3, 0x8f, 0xe2, 0x8e, 0xd8, 0x5b, 0x19, 0xf9,
		0x68, 0x8c, 0x9a, 0xa3, 0x4b, 0x51, 0x25, 0x1e, 0xd6, 0xfa, 0x79, 0x93,
		0x3e, 0x77, 0x0c, 0x7c, 0x2b, 0x00, 0x2c, 0x4f, 0xcf, 0xaf, 0xc6, 0xf3,
		0x6a, 0x32, 0x2d, 0xcf, 0xee, 0xd8, 0x23, 0x6f, 0x67, 0x35, 0x20, 0x51,
		0x68, 0x34, 0x69, 0xb5, 0x24, 0x39, 0x6f, 0xff, 0x5f, 0x75, 0x6d, 0xea,
		0x93, 0x5b, 0x59, 0xad, 0xd1, 0x4b, 0x8b, 0x97, 0xaf, 0xef, 0x2b, 0x7f,
		0x0c, 0x76, 0x9a, 0x57, 0xb4, 0xb6, 0xe8, 0xe2, 0x10, 0xf8, 0x08, 0xa4,
		0x5e, 0xa1, 0xc2, 0x2f, 0x3d, 0xa4, 0xec, 0x78, 0xe2, 0xcd, 0xe4, 0xca,
		0x6e, 0x75, 0x9f, 0x4f, 0x1d, 0x09, 0xb4, 0xda, 0x39, 0x4f, 0x70, 0x87,
		0xd0, 0xf9, 0xe4, 0x4c, 0x99, 0xd1, 0xb2, 0xaf, 0x12, 0x63, 0x03, 0x9a,
		0x65, 0x30, 0xf3, 0xe2, 0xa9, 0x6d, 0x99, 0xdf, 0x95, 0xa8, 0x3e, 0xff,
		0x0d, 0x00, 0x00, 0xff, 0xff, 0x1b, 0x60, 0xf0, 0x3b, 0xa5, 0x04, 0x00,
		0x00,
	},
		"json/extract.json",
	)
}

func json_get_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x6c, 0x91,
		0xbf, 0x4e, 0x04, 0x21, 0x10, 0xc6, 0xfb, 0x7b, 0x0a, 0xb2, 0x5e, 0xe9,
		0x89, 0x85, 0xd5, 0xb5, 0x16, 0xb6, 0x16, 0x76, 0xc6, 0x02, 0x61, 0x96,
		0x9d, 0xcb, 0x1e, 0xe0, 0x30, 0x98, 0x18, 0x73, 0xef, 0x2e, 0xb3, 0x90,
		0xcd, 0x26, 0x6e, 0xb7, 0x7c, 0xfb, 0xfd, 0xf9, 0x11, 0x7e, 0x0f, 0x4a,
		0x0d, 0xe8, 0x86, 0xb3, 0x1a, 0xb4, 0x07, 0x1e, 0xee, 0xe5, 0x7c, 0xcc,
		0x76, 0x82, 0xab, 0x11, 0x71, 0x62, 0x4e, 0x67, 0xad, 0x2f, 0x39, 0x86,
		0x53, 0x53, 0x1f, 0x22, 0x79, 0xed, 0xc8, 0x8c, 0x7c, 0x7a, 0x7c, 0xd2,
		0x4d, 0xbb, 0x6b, 0x39, 0x46, 0x9e, 0x41, 0x52, 0xc7, 0xb5, 0xca, 0x53,
		0x2c, 0x49, 0xa4, 0xe7, 0x58, 0x02, 0x03, 0xe5, 0x26, 0x3b, 0xc8, 0x96,
		0x30, 0x31, 0xc6, 0x20, 0x3f, 0x5f, 0x80, 0xb3, 0xe2, 0x09, 0x94, 0x2d,
		0x44, 0x10, 0x58, 0x7d, 0x9b, 0xb9, 0x80, 0x8a, 0xa3, 0x32, 0xca, 0xb6,
		0x60, 0xcb, 0x11, 0x70, 0x21, 0x89, 0x08, 0xb7, 0x2c, 0xfe, 0xa4, 0x65,
		0x10, 0xab, 0xc5, 0x77, 0xd3, 0xff, 0xfa, 0xb7, 0xbd, 0xe6, 0x65, 0xae,
		0x77, 0xd7, 0xd4, 0xad, 0xdd, 0xa0, 0xf7, 0xc5, 0xcf, 0x0b, 0xd8, 0x7e,
		0x05, 0xe3, 0x1c, 0x4a, 0x93, 0x99, 0x5f, 0x29, 0x26, 0x20, 0x46, 0xc8,
		0xd5, 0x33, 0x9a, 0x39, 0xc3, 0x62, 0x48, 0x5b, 0xb9, 0x83, 0x05, 0x73,
		0x85, 0xf5, 0xb4, 0x29, 0xce, 0x4c, 0x18, 0x7c, 0xe7, 0xdc, 0x27, 0x95,
		0xe8, 0x0e, 0x60, 0x45, 0x5c, 0x31, 0x09, 0xbe, 0x0a, 0x12, 0xc8, 0xb3,
		0xbd, 0x6f, 0xf6, 0xea, 0xe7, 0xc7, 0xe1, 0xf6, 0x17, 0x00, 0x00, 0xff,
		0xff, 0x5c, 0x9c, 0xa6, 0xd4, 0xd3, 0x01, 0x00, 0x00,
	},
		"json/get.json",
	)
}

func json_gt_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x52,
		0x31, 0x6e, 0xc3, 0x30, 0x0c, 0xdc, 0xf3, 0x0a, 0xc2, 0xcd, 0x98, 0xd4,
		0x1d, 0x3a, 0x65, 0x0d, 0xd0, 0xb9, 0x43, 0xb7, 0xa2, 0x80, 0x95, 0x98,
		0xb6, 0x15, 0x28, 0xa2, 0x4a, 0x51, 0x0d, 0x8a, 0x22, 0x7f, 0xaf, 0x28,
		0x39, 0x41, 0x10, 0x74, 0xea, 0x66, 0x9e, 0xef, 0x8e, 0x77, 0x84, 0x7e,
		0x16, 0x00, 0x8d, 0xed, 0x9b, 0x0d, 0x34, 0xed, 0x28, 0xcd, 0x4a, 0xc7,
		0x65, 0xdc, 0x4f, 0x78, 0x34, 0x8a, 0x4d, 0x22, 0x61, 0xd3, 0xb6, 0x87,
		0x48, 0x7e, 0x5d, 0xd1, 0x47, 0xe2, 0xb1, 0xed, 0xd9, 0x0c, 0xb2, 0x7e,
		0x7a, 0x6e, 0x2b, 0xf6, 0x50, 0x75, 0x62, 0xc5, 0xa1, 0xaa, 0x96, 0x17,
		0xa7, 0x91, 0x29, 0x05, 0x45, 0xb6, 0x74, 0x0c, 0x86, 0x6d, 0xb6, 0x01,
		0xe3, 0x7b, 0x78, 0x71, 0x74, 0x82, 0x2d, 0x79, 0x61, 0x72, 0x95, 0xc9,
		0x28, 0x89, 0x7d, 0xa6, 0x6a, 0x20, 0xf5, 0xfa, 0x0e, 0xc5, 0x6a, 0x47,
		0xe4, 0xd0, 0xf8, 0x42, 0xca, 0x70, 0x8f, 0x71, 0xcf, 0x36, 0x88, 0x25,
		0xe5, 0x36, 0x6f, 0x13, 0x02, 0x63, 0x4c, 0x4e, 0x80, 0x06, 0x90, 0x3c,
		0x51, 0x40, 0x36, 0xe5, 0x77, 0x16, 0x9c, 0x8b, 0xf5, 0x9d, 0xa6, 0x46,
		0xc1, 0x08, 0x72, 0x22, 0xf8, 0x32, 0x2e, 0xe5, 0x4f, 0xcd, 0x54, 0x13,
		0x64, 0x98, 0x13, 0x82, 0x1d, 0xa0, 0x73, 0x38, 0x48, 0x07, 0x36, 0xc2,
		0xc8, 0x68, 0x04, 0x39, 0xfb, 0x1b, 0x0f, 0x1d, 0xdb, 0x71, 0x92, 0x6e,
		0x6e, 0x3c, 0xa7, 0xa4, 0xdd, 0x01, 0xf7, 0x73, 0x67, 0xd3, 0xf7, 0x56,
		0x77, 0x19, 0xf7, 0xca, 0x9a, 0x46, 0x2c, 0xc6, 0xcc, 0x19, 0x8c, 0x8b,
		0x58, 0x08, 0xe1, 0x16, 0x9e, 0xeb, 0xea, 0xae, 0xeb, 0x74, 0x63, 0xec,
		0xd3, 0x71, 0x87, 0x3c, 0xb7, 0xff, 0xbb, 0xbf, 0x4a, 0x6b, 0x6d, 0xdf,
		0x37, 0x85, 0x77, 0x9e, 0x8f, 0x55, 0x92, 0xfe, 0xd3, 0xb5, 0x68, 0xef,
		0x6c, 0xaf, 0x17, 0x65, 0xfc, 0x4c, 0x96, 0x51, 0x5f, 0xcd, 0xfb, 0x4d,
		0xfe, 0xd5, 0x65, 0x65, 0xc6, 0x3e, 0x16, 0xe7, 0xdf, 0x00, 0x00, 0x00,
		0xff, 0xff, 0xa4, 0x68, 0xca, 0xb7, 0x5b, 0x02, 0x00, 0x00,
	},
		"json/gt.json",
	)
}

func json_gte_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x52,
		0xb1, 0x6e, 0xe3, 0x30, 0x0c, 0xdd, 0xf3, 0x15, 0x84, 0x2f, 0x63, 0x72,
		0xbe, 0xe1, 0xa6, 0xac, 0x01, 0x6e, 0xbe, 0xa1, 0x5b, 0x51, 0xc0, 0x4a,
		0x44, 0xdb, 0x0a, 0x14, 0x51, 0xa5, 0xa8, 0x06, 0x45, 0x91, 0x7f, 0xaf,
		0x28, 0xb9, 0x41, 0x10, 0x74, 0xea, 0x66, 0x3e, 0xbf, 0xf7, 0xf8, 0xf8,
		0xa0, 0x8f, 0x15, 0x40, 0xe7, 0x6c, 0xb7, 0x83, 0xae, 0x9f, 0x04, 0xbb,
		0x8d, 0xce, 0xeb, 0x74, 0x9c, 0xf1, 0x6c, 0x14, 0x9c, 0x45, 0xe2, 0xae,
		0xef, 0x4f, 0x89, 0xc2, 0xb6, 0xa1, 0xbf, 0x89, 0xa7, 0xde, 0xb2, 0x19,
		0x65, 0xfb, 0xe7, 0x6f, 0xdf, 0xb0, 0x5f, 0x4d, 0x27, 0x4e, 0x3c, 0xaa,
		0x6a, 0x7d, 0xb3, 0x9a, 0x98, 0x72, 0x54, 0x68, 0x4f, 0xe7, 0x68, 0xd8,
		0x15, 0x1f, 0x30, 0xc1, 0xc2, 0x3f, 0x4f, 0x17, 0xd8, 0x53, 0x10, 0x26,
		0xdf, 0x98, 0x8c, 0x92, 0x39, 0x14, 0xaa, 0x46, 0x52, 0xb3, 0xf7, 0x58,
		0xbd, 0x0e, 0x44, 0x1e, 0x4d, 0xa8, 0xa4, 0x02, 0x5b, 0x4c, 0x47, 0x76,
		0x51, 0x1c, 0x29, 0xb7, 0x7b, 0x9a, 0x11, 0x18, 0x53, 0xf6, 0x02, 0x34,
		0x82, 0x94, 0x89, 0x22, 0xb2, 0xa9, 0xbf, 0x8b, 0xe0, 0x5a, 0xad, 0x1f,
		0x34, 0x2d, 0x0a, 0x26, 0x90, 0x0b, 0xc1, 0x9b, 0xf1, 0xb9, 0x7c, 0x6a,
		0xa6, 0x96, 0xa0, 0xc0, 0x9c, 0x11, 0xdc, 0x08, 0x83, 0xc7, 0x51, 0x06,
		0x70, 0x09, 0x26, 0x46, 0x23, 0xc8, 0xc5, 0xdf, 0x04, 0x20, 0x06, 0x7c,
		0xcd, 0xc6, 0x83, 0x10, 0x0c, 0xec, 0xa6, 0x59, 0x86, 0xe5, 0xfc, 0x25,
		0x31, 0x1d, 0x4e, 0x78, 0x94, 0x86, 0x19, 0x6b, 0x9d, 0xee, 0x35, 0xfe,
		0x3f, 0x6b, 0x32, 0x71, 0x98, 0x0a, 0x67, 0x34, 0x3e, 0x61, 0x25, 0xc4,
		0x7b, 0x78, 0x39, 0x5d, 0xf7, 0xde, 0xa6, 0x3b, 0xe3, 0x90, 0xcf, 0x07,
		0xe4, 0xa5, 0x89, 0xef, 0xbb, 0x50, 0x69, 0xab, 0x20, 0xd8, 0xae, 0xf2,
		0xae, 0x4b, 0x71, 0x35, 0xe9, 0x0f, 0x5d, 0xab, 0xf6, 0xc1, 0xf6, 0xd6,
		0x2e, 0x97, 0x36, 0x1c, 0xa3, 0xbe, 0xa1, 0xe7, 0xbb, 0xfc, 0x9b, 0xaf,
		0x95, 0x05, 0x7b, 0x59, 0x5d, 0x3f, 0x03, 0x00, 0x00, 0xff, 0xff, 0xa7,
		0x06, 0xb5, 0x82, 0x69, 0x02, 0x00, 0x00,
	},
		"json/gte.json",
	)
}

func json_if_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xac, 0x52,
		0xc1, 0x52, 0xea, 0x40, 0x10, 0xbc, 0xf3, 0x15, 0x53, 0x79, 0x1c, 0xc3,
		0x8b, 0x07, 0x4f, 0x1c, 0xa5, 0xf4, 0xec, 0xc1, 0x9b, 0x65, 0x15, 0x4b,
		0x32, 0x81, 0xc5, 0x65, 0x67, 0x9d, 0x9d, 0x88, 0x94, 0xc5, 0xbf, 0x3b,
		0x9b, 0x0d, 0x11, 0xc4, 0xa3, 0x47, 0x9a, 0xee, 0x9e, 0xee, 0xde, 0x7c,
		0x4e, 0x00, 0x0a, 0xdb, 0x14, 0x73, 0x28, 0x2a, 0xdb, 0x16, 0x65, 0xfa,
		0x39, 0x8d, 0xf5, 0x06, 0x77, 0x26, 0x61, 0x1b, 0x91, 0x30, 0xaf, 0xaa,
		0x6d, 0x24, 0x3f, 0xcb, 0xe8, 0x7f, 0xe2, 0x75, 0xd5, 0xb0, 0x69, 0x65,
		0x76, 0x73, 0x5b, 0x65, 0xec, 0x5f, 0xd6, 0x89, 0x15, 0x87, 0x49, 0x35,
		0x3d, 0x39, 0xad, 0x99, 0xba, 0x90, 0x90, 0x05, 0xed, 0x82, 0x61, 0xab,
		0x36, 0x60, 0x7c, 0x03, 0x0f, 0x8e, 0xf6, 0xb0, 0x20, 0x2f, 0x4c, 0x2e,
		0x33, 0x1b, 0x8c, 0x35, 0xdb, 0x20, 0x96, 0x7c, 0xe2, 0xdf, 0xbf, 0x1b,
		0xd7, 0x19, 0xc1, 0x08, 0x06, 0xee, 0x88, 0x1c, 0x1a, 0x0f, 0xf8, 0x11,
		0x18, 0x63, 0x54, 0x46, 0xd9, 0x9b, 0x30, 0x4a, 0xc7, 0x3e, 0x02, 0x79,
		0x04, 0x6a, 0x41, 0xf6, 0x04, 0x49, 0xa5, 0x9a, 0x95, 0x89, 0xd8, 0x28,
		0x0e, 0x56, 0xa2, 0xd2, 0x62, 0xe7, 0x24, 0x5f, 0xc9, 0x12, 0x3d, 0x90,
		0x6a, 0xa7, 0xc4, 0x87, 0xd0, 0x07, 0x36, 0xfe, 0xd0, 0x13, 0xae, 0x83,
		0x2c, 0x85, 0x3b, 0x5c, 0x82, 0x55, 0xff, 0x0d, 0x66, 0x7f, 0xb0, 0x9a,
		0xca, 0xd3, 0xce, 0x38, 0xea, 0x62, 0xa1, 0xaa, 0x63, 0x6e, 0x3f, 0x78,
		0xd1, 0x6a, 0x8b, 0xf5, 0x70, 0xcf, 0x34, 0x8d, 0x4d, 0x4e, 0xc6, 0x3d,
		0x32, 0x05, 0x64, 0xb1, 0x18, 0x95, 0xd3, 0x1a, 0x17, 0xb1, 0x27, 0x84,
		0x73, 0x78, 0x08, 0x55, 0x93, 0xcf, 0xaa, 0x11, 0x3a, 0x73, 0x5f, 0xe5,
		0x31, 0x86, 0xb4, 0xd7, 0x79, 0x9f, 0x34, 0xe5, 0x68, 0x00, 0x42, 0xa0,
		0x0f, 0x54, 0xbf, 0x16, 0x3d, 0xfb, 0x38, 0x54, 0xd4, 0x26, 0x17, 0xde,
		0xbf, 0x58, 0xe4, 0xa2, 0x2a, 0xcf, 0x8b, 0x9d, 0xfa, 0x7f, 0x3b, 0xe3,
		0xf8, 0x40, 0x4a, 0xca, 0x23, 0x5d, 0x1e, 0x41, 0xad, 0xf8, 0xb7, 0x47,
		0xfa, 0xd5, 0x4e, 0x57, 0xc6, 0xd9, 0x19, 0xdf, 0x3a, 0xcb, 0x98, 0xbe,
		0xe0, 0xe7, 0x9f, 0xfb, 0x95, 0x43, 0xd7, 0x72, 0x88, 0xa3, 0xff, 0xbf,
		0x4c, 0x8e, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa8, 0x1f, 0x60, 0x51,
		0xf3, 0x02, 0x00, 0x00,
	},
		"json/if.json",
	)
}

func json_incr_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x74, 0x91,
		0x31, 0x4f, 0xc3, 0x30, 0x10, 0x85, 0xf7, 0xfe, 0x0a, 0xcb, 0x74, 0x00,
		0xa9, 0x25, 0x0c, 0x4c, 0x5d, 0x99, 0xd8, 0x18, 0xd8, 0x10, 0xc3, 0x35,
		0xb9, 0x24, 0x57, 0x25, 0xb6, 0x39, 0x5f, 0x2a, 0x55, 0xa8, 0xff, 0x1d,
		0x9f, 0x9d, 0x40, 0x84, 0x60, 0xcc, 0x97, 0xf7, 0xde, 0xbd, 0x3b, 0x7f,
		0x6e, 0x8c, 0xb1, 0xd4, 0xd8, 0x83, 0xb1, 0x15, 0xb9, 0x9a, 0xed, 0x4e,
		0xc1, 0x36, 0xd6, 0x3d, 0x8e, 0xa0, 0xb4, 0x17, 0x09, 0x87, 0xaa, 0x3a,
		0x45, 0xef, 0xf6, 0x85, 0xde, 0x7b, 0xee, 0xaa, 0x86, 0xa1, 0x95, 0xfd,
		0xc3, 0x63, 0x55, 0xd8, 0x4d, 0xf1, 0x09, 0xc9, 0x80, 0xea, 0xda, 0xfe,
		0x64, 0x75, 0xec, 0xa7, 0xa0, 0xec, 0xc9, 0x4f, 0x4e, 0x90, 0x63, 0xc1,
		0x0d, 0xc6, 0x9a, 0x29, 0x08, 0x79, 0xa7, 0x3f, 0x9f, 0x93, 0x1e, 0x47,
		0x74, 0x12, 0x8d, 0xf4, 0x68, 0xce, 0x30, 0x4c, 0x68, 0x7c, 0x6b, 0xc0,
		0xd4, 0xc5, 0x36, 0x0f, 0xb8, 0x84, 0x9c, 0xef, 0x8f, 0x27, 0xac, 0xa5,
		0x30, 0x68, 0x1a, 0xd2, 0x18, 0x18, 0x5e, 0xd8, 0x07, 0x64, 0x21, 0x8c,
		0x49, 0xd3, 0xc2, 0x10, 0x31, 0x0b, 0xc2, 0x1a, 0xeb, 0xc2, 0x89, 0x39,
		0x18, 0xf1, 0xfb, 0x6b, 0x15, 0x1c, 0x85, 0xc9, 0x75, 0x39, 0x38, 0xf3,
		0x5f, 0x35, 0x5f, 0x53, 0x37, 0xb5, 0x6a, 0x35, 0xed, 0xb9, 0x94, 0xcb,
		0xf2, 0x6b, 0x71, 0xd9, 0x5c, 0xfe, 0xaf, 0x70, 0x4a, 0xda, 0x6e, 0x5e,
		0xe5, 0xbf, 0x74, 0x5a, 0x0e, 0x31, 0xdf, 0xe0, 0x76, 0x84, 0x8b, 0x39,
		0xa6, 0xa9, 0xd8, 0x81, 0xd0, 0x19, 0xef, 0xe6, 0x59, 0x9b, 0x79, 0x9e,
		0x65, 0xfc, 0x98, 0x88, 0x51, 0x9f, 0xf0, 0x6d, 0xb5, 0xdb, 0x6e, 0xe9,
		0x91, 0xd8, 0xfb, 0xe6, 0xfa, 0x15, 0x00, 0x00, 0xff, 0xff, 0x82, 0xda,
		0x2f, 0x06, 0xe8, 0x01, 0x00, 0x00,
	},
		"json/incr.json",
	)
}

func json_last_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x84, 0x53,
		0x4d, 0x8f, 0x9b, 0x30, 0x10, 0xbd, 0xe7, 0x57, 0x8c, 0xdc, 0x1c, 0x9b,
		0xd2, 0x43, 0x4f, 0xb9, 0xe5, 0xd8, 0x4b, 0x55, 0x55, 0xa9, 0x54, 0xa9,
		0xda, 0xc3, 0x04, 0x0f, 0xe0, 0x08, 0x6c, 0xaf, 0x3d, 0x64, 0x15, 0xad,
		0xf8, 0xef, 0xcb, 0x60, 0x48, 0x60, 0xc3, 0x6a, 0x2f, 0x91, 0xfc, 0x32,
		0xef, 0xc3, 0xcf, 0xc3, 0xeb, 0x06, 0x40, 0x19, 0xad, 0xf6, 0xa0, 0xb2,
		0x1a, 0x23, 0xab, 0xaf, 0x02, 0x6c, 0x63, 0x5e, 0x51, 0x83, 0x82, 0x56,
		0xcc, 0x7e, 0x9f, 0x65, 0xe7, 0xe8, 0xec, 0x2e, 0xa1, 0xdf, 0x5c, 0x28,
		0x33, 0x1d, 0xb0, 0xe0, 0xdd, 0xf7, 0x1f, 0x59, 0xc2, 0xbe, 0x24, 0x1e,
		0x1b, 0xae, 0x49, 0x58, 0xdb, 0xbb, 0x56, 0x19, 0x5c, 0xeb, 0x05, 0x3b,
		0x94, 0x65, 0xa0, 0x12, 0xd9, 0x38, 0x1b, 0x01, 0xad, 0x86, 0xa3, 0x69,
		0x28, 0x52, 0x30, 0x14, 0xd3, 0xa4, 0xa6, 0x98, 0x07, 0xe3, 0x65, 0x40,
		0xe6, 0xff, 0x10, 0xf7, 0xff, 0x5d, 0x28, 0x02, 0x57, 0x04, 0x22, 0x08,
		0x17, 0xac, 0x5b, 0x82, 0x22, 0xb8, 0x06, 0x10, 0x34, 0x32, 0xc2, 0x9c,
		0x1f, 0x88, 0xdb, 0x20, 0x54, 0xb9, 0x94, 0xa4, 0xb9, 0xfa, 0x21, 0x8c,
		0x3b, 0x9d, 0x29, 0x4f, 0x69, 0x1e, 0x5d, 0x8e, 0x4b, 0x6d, 0x63, 0x07,
		0xb7, 0x99, 0x6c, 0x4f, 0xf1, 0xc1, 0x79, 0x0a, 0x2c, 0xc8, 0x24, 0x2e,
		0xf2, 0xf3, 0xd3, 0xcc, 0xce, 0x58, 0xa6, 0x92, 0xc2, 0x48, 0xfe, 0xc8,
		0xf3, 0xef, 0xaf, 0x9f, 0xff, 0x80, 0xa5, 0x01, 0xc6, 0xc6, 0x83, 0x2b,
		0x06, 0xdf, 0x21, 0x84, 0x1a, 0x89, 0xdd, 0xa4, 0xa0, 0x12, 0xbc, 0xea,
		0x66, 0xdb, 0xe6, 0xf4, 0xa9, 0xd9, 0x52, 0x76, 0x33, 0xfd, 0x76, 0xe9,
		0xd1, 0x1e, 0x6b, 0x52, 0xa8, 0xb5, 0x11, 0x01, 0xac, 0x7f, 0xcf, 0xef,
		0x5e, 0x60, 0x1d, 0x69, 0x18, 0x58, 0xa9, 0x44, 0x8d, 0xa5, 0xcd, 0x2b,
		0x1a, 0xa5, 0x63, 0xff, 0x92, 0xb6, 0xbc, 0x85, 0x5c, 0x8b, 0x68, 0xb1,
		0xa1, 0xa9, 0x85, 0x24, 0x04, 0xec, 0xe0, 0xa5, 0x32, 0x79, 0x75, 0x6f,
		0x06, 0xcc, 0x80, 0x9e, 0x08, 0xd0, 0x7b, 0xb2, 0x9a, 0x74, 0xba, 0x54,
		0x77, 0x7b, 0xdb, 0x02, 0xdb, 0x9a, 0xd7, 0x22, 0x2c, 0x96, 0xe0, 0x31,
		0xc2, 0x01, 0x46, 0x2e, 0x54, 0x18, 0x2b, 0x31, 0x49, 0xdb, 0xd4, 0x27,
		0xa0, 0xf9, 0x4a, 0x48, 0x02, 0x6a, 0x3c, 0x5f, 0xd5, 0xbb, 0x16, 0x03,
		0x3d, 0xb7, 0x26, 0x90, 0x7c, 0x49, 0xff, 0x17, 0x75, 0xf4, 0x87, 0xa7,
		0x4d, 0xf7, 0x16, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x2e, 0x39, 0xcc, 0x68,
		0x03, 0x00, 0x00,
	},
		"json/last.json",
	)
}

func json_lt_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x52,
		0xb1, 0x6e, 0x2a, 0x31, 0x10, 0xec, 0xf9, 0x8a, 0xd5, 0x3d, 0x4a, 0x78,
		0xf7, 0x8a, 0x57, 0xd1, 0x22, 0xa5, 0x4e, 0x91, 0x2e, 0x8a, 0x74, 0x06,
		0xef, 0x71, 0x46, 0xc6, 0xeb, 0xac, 0xd7, 0x41, 0x51, 0xc4, 0xbf, 0xc7,
		0x6b, 0x1f, 0x08, 0xa1, 0x54, 0xe9, 0x6e, 0xe7, 0x66, 0x66, 0x67, 0x56,
		0xfe, 0x5a, 0x00, 0x74, 0xce, 0x76, 0x1b, 0xe8, 0x7a, 0x2f, 0xdd, 0x4a,
		0xc7, 0x65, 0xda, 0x4f, 0x78, 0x32, 0x8a, 0x4d, 0x22, 0x71, 0xd3, 0xf7,
		0xc7, 0x44, 0x61, 0xdd, 0xd0, 0xbf, 0xc4, 0x87, 0xde, 0xb2, 0x19, 0x65,
		0xfd, 0xef, 0x7f, 0xdf, 0xb0, 0x3f, 0x4d, 0x27, 0x4e, 0x3c, 0xaa, 0x6a,
		0x79, 0x75, 0x3a, 0x30, 0xe5, 0xa8, 0xc8, 0x96, 0x4e, 0xd1, 0xb0, 0x2b,
		0x36, 0x60, 0x82, 0x85, 0x27, 0x4f, 0x67, 0xd8, 0x52, 0x10, 0x26, 0xdf,
		0x98, 0x8c, 0x92, 0x39, 0x14, 0xaa, 0x06, 0x52, 0xaf, 0xcf, 0x58, 0xad,
		0x76, 0x44, 0x1e, 0x4d, 0xa8, 0xa4, 0x02, 0x5b, 0x4c, 0x7b, 0x76, 0x51,
		0x1c, 0x29, 0xb7, 0x7b, 0x99, 0x10, 0x18, 0x53, 0xf6, 0x02, 0x34, 0x82,
		0x94, 0x89, 0x22, 0xb2, 0xa9, 0xbf, 0x8b, 0xe0, 0x52, 0xad, 0x1f, 0x34,
		0x2d, 0x0a, 0x26, 0x90, 0x33, 0xc1, 0x87, 0xf1, 0xb9, 0x7c, 0x6a, 0xa6,
		0x96, 0xa0, 0xc0, 0x9c, 0x11, 0xdc, 0x08, 0x83, 0xc7, 0x51, 0x06, 0x70,
		0x09, 0x3c, 0xa6, 0x02, 0x4f, 0x26, 0xc0, 0xc0, 0xee, 0x30, 0xc9, 0x30,
		0xd7, 0x9d, 0x23, 0xd2, 0xee, 0x88, 0xfb, 0xb9, 0xb0, 0xb1, 0xd6, 0xe9,
		0x22, 0xe3, 0x9f, 0x59, 0xa3, 0x88, 0xc3, 0x54, 0x38, 0xa3, 0xf1, 0x09,
		0x2b, 0x21, 0xde, 0xc3, 0x73, 0x57, 0x5d, 0x74, 0x9b, 0xee, 0x8c, 0x43,
		0x3e, 0xed, 0x90, 0xe7, 0xea, 0x3f, 0x97, 0x57, 0x69, 0xeb, 0x1c, 0x6c,
		0x57, 0x79, 0x97, 0xf9, 0x52, 0x35, 0xe9, 0x2f, 0x5d, 0xab, 0xf6, 0xc1,
		0xf6, 0x76, 0x4e, 0xc6, 0xf7, 0xec, 0x18, 0xf5, 0xc9, 0xbc, 0xde, 0xe5,
		0x5f, 0x5d, 0x57, 0x16, 0xec, 0x6d, 0x71, 0xf9, 0x0e, 0x00, 0x00, 0xff,
		0xff, 0x2f, 0x46, 0xe3, 0xe4, 0x58, 0x02, 0x00, 0x00,
	},
		"json/lt.json",
	)
}

func json_lte_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x52,
		0xb1, 0x6e, 0xeb, 0x30, 0x0c, 0xdc, 0xf3, 0x15, 0x84, 0x5f, 0xc6, 0xe4,
		0xb9, 0x43, 0xa7, 0xac, 0x01, 0x3a, 0x77, 0xe8, 0x56, 0x14, 0xb0, 0x12,
		0xd1, 0xb1, 0x02, 0x45, 0x54, 0x29, 0xaa, 0x41, 0x51, 0xe4, 0xdf, 0x2b,
		0x4a, 0x6e, 0x10, 0x04, 0x9d, 0xba, 0x99, 0xe7, 0xbb, 0xe3, 0xf1, 0xa0,
		0xaf, 0x05, 0x40, 0xe7, 0x6c, 0xb7, 0x81, 0xae, 0xf7, 0x82, 0xdd, 0x4a,
		0xe7, 0x65, 0xda, 0x4f, 0x78, 0x32, 0x0a, 0x4e, 0x22, 0x71, 0xd3, 0xf7,
		0xc7, 0x44, 0x61, 0xdd, 0xd0, 0xff, 0xc4, 0x87, 0xde, 0xb2, 0x19, 0x65,
		0xfd, 0xf0, 0xd8, 0x37, 0xec, 0x5f, 0xd3, 0x89, 0x13, 0x8f, 0xaa, 0x5a,
		0x5e, 0xad, 0x0e, 0x4c, 0x39, 0x2a, 0xb4, 0xa5, 0x53, 0x34, 0xec, 0x8a,
		0x0f, 0x98, 0x60, 0xe1, 0xc9, 0xd3, 0x19, 0xb6, 0x14, 0x84, 0xc9, 0x37,
		0x26, 0xa3, 0x64, 0x0e, 0x85, 0xaa, 0x91, 0xd4, 0xec, 0x33, 0x56, 0xaf,
		0x1d, 0x91, 0x47, 0x13, 0x2a, 0xa9, 0xc0, 0x16, 0xd3, 0x9e, 0x5d, 0x14,
		0x47, 0xca, 0xed, 0x5e, 0x26, 0x04, 0xc6, 0x94, 0xbd, 0x00, 0x8d, 0x20,
		0x65, 0xa2, 0x88, 0x6c, 0xea, 0xef, 0x22, 0xb8, 0x54, 0xeb, 0x3b, 0x4d,
		0x8b, 0x82, 0x09, 0xe4, 0x4c, 0xf0, 0x61, 0x7c, 0x2e, 0x9f, 0x9a, 0xa9,
		0x25, 0x28, 0x30, 0x67, 0x04, 0x37, 0xc2, 0xe0, 0x71, 0x94, 0x01, 0x5c,
		0x02, 0x8f, 0xa9, 0xc0, 0x93, 0x09, 0x40, 0x0c, 0xf8, 0x9e, 0x8d, 0x07,
		0x21, 0x18, 0xd8, 0x1d, 0x26, 0x19, 0xe6, 0xdb, 0xe7, 0xb8, 0xb4, 0x3b,
		0xe2, 0x5e, 0x1a, 0x66, 0xac, 0x75, 0xba, 0xd4, 0xf8, 0x67, 0xd6, 0x58,
		0xe2, 0x30, 0x15, 0xce, 0x68, 0x7c, 0xc2, 0x4a, 0x88, 0xb7, 0xf0, 0x7c,
		0xb7, 0x2e, 0xbd, 0x4e, 0x37, 0xc6, 0x21, 0x9f, 0x76, 0xc8, 0x73, 0x0d,
		0xbf, 0x17, 0xa1, 0xd2, 0x76, 0x7f, 0xb0, 0x5d, 0xe5, 0x5d, 0xe6, 0xd6,
		0x6a, 0xd2, 0x3f, 0xba, 0x56, 0xed, 0x9d, 0xed, 0xb5, 0x5a, 0x2e, 0x6d,
		0x38, 0x46, 0x7d, 0x40, 0xaf, 0x37, 0xf9, 0x57, 0x3f, 0x2b, 0x0b, 0xf6,
		0xb6, 0xb8, 0x7c, 0x07, 0x00, 0x00, 0xff, 0xff, 0xb1, 0x0f, 0x3d, 0x80,
		0x66, 0x02, 0x00, 0x00,
	},
		"json/lte.json",
	)
}

func json_mul_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x92,
		0xb1, 0x4e, 0xc3, 0x30, 0x10, 0x86, 0xf7, 0x3e, 0xc5, 0x29, 0x74, 0x6c,
		0x09, 0x03, 0x53, 0x1f, 0x80, 0xad, 0x12, 0x03, 0x1b, 0x62, 0x70, 0xe3,
		0x4b, 0xe2, 0xca, 0xb1, 0xcd, 0xf9, 0x0c, 0x42, 0x28, 0xef, 0x8e, 0xcf,
		0x31, 0x51, 0x55, 0xc1, 0xd2, 0x2d, 0xf7, 0xdf, 0xff, 0xfd, 0xbe, 0x3b,
		0xe5, 0x7b, 0x03, 0xd0, 0x18, 0xdd, 0x1c, 0xa0, 0x69, 0xa7, 0x64, 0x9b,
		0x9d, 0xd4, 0xdb, 0xd8, 0x8d, 0x38, 0x29, 0x11, 0x47, 0xe6, 0x70, 0x68,
		0xdb, 0x73, 0xf4, 0x6e, 0xbf, 0xa8, 0xf7, 0x9e, 0x86, 0x56, 0x93, 0xea,
		0x79, 0xff, 0xf0, 0xd8, 0x2e, 0xda, 0xdd, 0xc2, 0xb1, 0x61, 0x8b, 0x42,
		0x6d, 0xd7, 0xa8, 0x81, 0x7c, 0x0a, 0x22, 0x1d, 0x15, 0x8f, 0xf0, 0x94,
		0x5c, 0xc7, 0xc6, 0xbb, 0xb8, 0x34, 0x09, 0x39, 0x91, 0xcb, 0x5d, 0x99,
		0x42, 0xf8, 0xaf, 0x50, 0x70, 0x97, 0xa6, 0x13, 0x52, 0xf1, 0x64, 0x55,
		0x63, 0xec, 0xc8, 0x04, 0xe1, 0xa4, 0xf9, 0x32, 0x22, 0x10, 0xc6, 0x64,
		0x19, 0x7c, 0x0f, 0x9c, 0xab, 0xfc, 0x18, 0x9b, 0x60, 0x4d, 0xa7, 0x8a,
		0x27, 0x53, 0x73, 0x89, 0xbf, 0x02, 0x8f, 0xd5, 0x86, 0x11, 0xf8, 0xd3,
		0xc3, 0x87, 0xb2, 0x49, 0x3e, 0xfd, 0x80, 0x39, 0x84, 0xea, 0x06, 0x75,
		0x02, 0x7f, 0x3a, 0x63, 0xc7, 0x8b, 0xa6, 0xb4, 0x36, 0x92, 0xa1, 0xec,
		0x33, 0xf9, 0x80, 0xc4, 0x39, 0x21, 0x7b, 0x7a, 0x65, 0x23, 0x16, 0x43,
		0xb8, 0x94, 0xeb, 0x2a, 0x16, 0x7b, 0x5e, 0xab, 0xff, 0x56, 0xfb, 0x7b,
		0x39, 0x41, 0x41, 0x12, 0x95, 0xd3, 0x4d, 0xf1, 0xcd, 0xf5, 0x12, 0x64,
		0x86, 0xf1, 0xd6, 0xd4, 0xc2, 0x5e, 0xc5, 0xae, 0x97, 0x22, 0x7c, 0x4f,
		0x86, 0x50, 0x7e, 0x83, 0xd7, 0x8b, 0xf9, 0x77, 0xbf, 0x4f, 0x66, 0xed,
		0x6d, 0x33, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x5d, 0x02, 0x4c, 0x97,
		0x2c, 0x02, 0x00, 0x00,
	},
		"json/mul.json",
	)
}

func json_neq_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x52,
		0xbb, 0x6e, 0xc3, 0x30, 0x0c, 0xdc, 0xf3, 0x15, 0x84, 0x9a, 0x31, 0xa9,
		0x3b, 0x74, 0xca, 0x1a, 0xa0, 0x73, 0x87, 0x6e, 0x45, 0x07, 0x25, 0xa2,
		0x63, 0x05, 0x8a, 0xa8, 0x52, 0x54, 0x83, 0xa0, 0xf0, 0xbf, 0x57, 0x0f,
		0xd7, 0x30, 0x82, 0x4e, 0xdd, 0xcc, 0xf3, 0xdd, 0xf1, 0x8e, 0xd0, 0xf7,
		0x0a, 0x40, 0x59, 0xa3, 0x76, 0xa0, 0x3a, 0x8f, 0x9f, 0x6a, 0x53, 0xe6,
		0x75, 0x3c, 0x0e, 0x78, 0xd1, 0x05, 0x1c, 0x44, 0xc2, 0xae, 0xeb, 0xce,
		0x91, 0xfc, 0xb6, 0xa1, 0x8f, 0xc4, 0xa7, 0xce, 0xb0, 0xee, 0x65, 0xfb,
		0xf4, 0xdc, 0x35, 0xec, 0xa1, 0xe9, 0xc4, 0x8a, 0xc3, 0xa2, 0x5a, 0xcf,
		0x56, 0x27, 0xa6, 0x14, 0x0a, 0xb4, 0xa7, 0x4b, 0xd0, 0x6c, 0xb3, 0x0f,
		0x68, 0x6f, 0xe0, 0xc5, 0xd1, 0x15, 0xf6, 0xe4, 0x85, 0xc9, 0x35, 0x26,
		0xa3, 0x24, 0xf6, 0x99, 0x5a, 0x22, 0x15, 0xb3, 0x5b, 0xa8, 0x5e, 0x07,
		0x22, 0x87, 0xda, 0x57, 0x52, 0x86, 0x0d, 0xc6, 0x23, 0xdb, 0x20, 0x96,
		0x0a, 0x57, 0xbd, 0x0d, 0x08, 0x8c, 0x31, 0x39, 0x01, 0xea, 0x41, 0xf2,
		0x44, 0x01, 0x59, 0xd7, 0xdf, 0x59, 0x30, 0x56, 0xeb, 0x3b, 0x4d, 0x8b,
		0x82, 0x11, 0xe4, 0x4a, 0xf0, 0xa5, 0x5d, 0xca, 0x9f, 0x3d, 0x31, 0xd8,
		0x9c, 0x3a, 0x69, 0x67, 0xe5, 0x36, 0xd5, 0x99, 0x12, 0xd0, 0xe1, 0x8c,
		0x47, 0x69, 0x98, 0x36, 0xc6, 0x16, 0x1f, 0xed, 0x5e, 0xb9, 0x6c, 0x12,
		0x8b, 0x31, 0x73, 0x7a, 0xed, 0x22, 0x56, 0x42, 0x58, 0xc2, 0x53, 0x15,
		0x87, 0xbd, 0xcc, 0xd3, 0xc2, 0xd8, 0xa7, 0xcb, 0x01, 0x79, 0x6a, 0xf6,
		0x77, 0xb7, 0x22, 0x6d, 0x95, 0xbc, 0x51, 0x95, 0x37, 0x4e, 0x87, 0x60,
		0x7b, 0x1a, 0xfe, 0xeb, 0x5a, 0xb5, 0x77, 0xb6, 0xf3, 0xb5, 0x38, 0x5f,
		0xc1, 0x32, 0x96, 0x37, 0xf1, 0xbe, 0xc8, 0xbf, 0xf9, 0x5d, 0x99, 0xb1,
		0x8f, 0xd5, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0x5c, 0xb6, 0x79, 0x79,
		0x39, 0x02, 0x00, 0x00,
	},
		"json/neq.json",
	)
}

func json_pick_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x94, 0x53,
		0xb1, 0x72, 0xd4, 0x30, 0x10, 0xed, 0xf3, 0x15, 0x3b, 0xe6, 0xca, 0xcb,
		0x99, 0x82, 0x2a, 0x54, 0x14, 0xd0, 0x42, 0x41, 0x2a, 0x86, 0x99, 0xdb,
		0x58, 0xeb, 0xb3, 0x82, 0x2d, 0x99, 0xd5, 0x9a, 0x70, 0xc3, 0xf8, 0xdf,
		0xd1, 0x5a, 0x3a, 0x45, 0x81, 0x90, 0x19, 0xba, 0xbb, 0xa7, 0xd5, 0x7b,
		0xfb, 0xde, 0x93, 0x7f, 0x5d, 0x01, 0x34, 0xd6, 0x34, 0x37, 0xd0, 0xb4,
		0xb3, 0xed, 0xbe, 0x35, 0x7b, 0x05, 0x76, 0xa1, 0x1b, 0x68, 0x42, 0x45,
		0x07, 0x91, 0xf9, 0xa6, 0x6d, 0xef, 0x83, 0x77, 0xd7, 0x09, 0x3d, 0x78,
		0x3e, 0xb5, 0x86, 0xb1, 0x97, 0xeb, 0xd7, 0x6f, 0xda, 0x84, 0xbd, 0x4a,
		0xf7, 0xc4, 0xca, 0x48, 0x7a, 0x6b, 0xf7, 0xc8, 0x75, 0x62, 0xbf, 0xcc,
		0x8a, 0xdd, 0x8a, 0x1d, 0xad, 0x9c, 0xe1, 0xc3, 0xe2, 0x3a, 0xb1, 0xde,
		0x85, 0x74, 0x6e, 0x28, 0x74, 0x6c, 0x67, 0x45, 0x74, 0xea, 0xfd, 0x4f,
		0x61, 0xec, 0x24, 0x80, 0x0c, 0x04, 0x3f, 0x70, 0x5c, 0x08, 0x7a, 0xcf,
		0x80, 0xe0, 0x70, 0x22, 0x03, 0x33, 0xfb, 0x99, 0x38, 0xb2, 0xf4, 0xec,
		0xa7, 0x88, 0x0e, 0x18, 0x86, 0xc4, 0xc3, 0x24, 0x0b, 0x2b, 0x85, 0x5a,
		0xd2, 0x5d, 0xce, 0xf3, 0xb6, 0x0a, 0xba, 0xf3, 0x36, 0xf0, 0xb7, 0xd4,
		0xe7, 0xa2, 0xe0, 0xfb, 0x4d, 0x8e, 0xe9, 0xfb, 0x42, 0x41, 0x2a, 0x99,
		0xb7, 0x60, 0x7b, 0x38, 0xaa, 0xd6, 0x11, 0x6c, 0x00, 0x74, 0x80, 0xcc,
		0x78, 0xde, 0xe7, 0xf1, 0xb0, 0x8c, 0x52, 0xe3, 0x4a, 0xb4, 0x31, 0x06,
		0xa0, 0xe4, 0x23, 0x72, 0x6d, 0x9b, 0x12, 0x76, 0x03, 0x58, 0xa1, 0x49,
		0x47, 0x12, 0xe1, 0x01, 0x6e, 0x03, 0xc1, 0x71, 0x97, 0x27, 0x8f, 0x20,
		0xfe, 0x72, 0x0b, 0x26, 0xcf, 0x14, 0x35, 0x22, 0xaf, 0x77, 0x54, 0xb6,
		0x39, 0x34, 0xd1, 0xc7, 0x9a, 0x92, 0xce, 0xee, 0xfc, 0xdd, 0x3d, 0x75,
		0x92, 0x12, 0x40, 0x63, 0xac, 0x7a, 0xc3, 0xf1, 0x53, 0xba, 0x60, 0x29,
		0xc4, 0x99, 0x1e, 0xc7, 0x40, 0xdb, 0xc0, 0x5c, 0xc3, 0x39, 0x26, 0xc5,
		0xca, 0xbf, 0x8a, 0x38, 0x08, 0x5b, 0x77, 0xca, 0xc9, 0x3d, 0x9f, 0x9d,
		0x36, 0x72, 0x89, 0xae, 0xf4, 0xf2, 0x30, 0xf8, 0x70, 0x89, 0x35, 0x1a,
		0xca, 0xad, 0x6c, 0x2c, 0x6b, 0xae, 0x41, 0xdd, 0xd7, 0x92, 0xd1, 0xe2,
		0xc7, 0x3e, 0x02, 0x5f, 0x32, 0x00, 0xe5, 0xe8, 0xc9, 0x46, 0x95, 0xd5,
		0x72, 0xf6, 0xcc, 0x56, 0x69, 0x2c, 0xa5, 0xfe, 0x30, 0x10, 0x53, 0x9d,
		0xab, 0xae, 0x6a, 0x50, 0xb0, 0x29, 0x24, 0xeb, 0xfe, 0x65, 0xd5, 0xad,
		0xd7, 0x17, 0x45, 0xdf, 0x55, 0xe5, 0xff, 0xaf, 0x78, 0xfe, 0xf5, 0xf5,
		0x49, 0x3e, 0x86, 0x7a, 0x8c, 0x0f, 0xab, 0x8e, 0xe8, 0x4f, 0x49, 0xc8,
		0x33, 0x8f, 0x41, 0x2f, 0x31, 0xf5, 0xa8, 0xe8, 0xfe, 0xf1, 0x90, 0xa1,
		0x43, 0xe7, 0xbc, 0xc0, 0x9d, 0x7e, 0x4e, 0x8b, 0x33, 0xb9, 0x91, 0xf2,
		0x9e, 0xf4, 0x86, 0x65, 0x32, 0xa5, 0x86, 0xf4, 0x30, 0xf6, 0xb9, 0xad,
		0x2b, 0xdd, 0x71, 0xfd, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x55, 0x92, 0xd9,
		0xbf, 0x2d, 0x04, 0x00, 0x00,
	},
		"json/pick.json",
	)
}

func json_pop_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x84, 0x93,
		0x41, 0x6f, 0xdb, 0x30, 0x0c, 0x85, 0xef, 0xf9, 0x15, 0x84, 0xd6, 0x63,
		0x3b, 0xef, 0xb0, 0x53, 0x6f, 0x3d, 0xf6, 0x32, 0x0c, 0x43, 0x07, 0x0c,
		0x18, 0x06, 0x94, 0xb1, 0x68, 0x5b, 0x9d, 0x2c, 0x69, 0x12, 0x9d, 0x20,
		0x18, 0xf2, 0xdf, 0x27, 0x4a, 0x4e, 0xe6, 0x20, 0x0e, 0x7a, 0x09, 0x20,
		0x86, 0x7c, 0xef, 0xe3, 0x93, 0xfc, 0x77, 0x03, 0xa0, 0x8c, 0x56, 0x8f,
		0xa0, 0x9a, 0xe0, 0x83, 0xba, 0x97, 0xf3, 0x5d, 0x6a, 0x07, 0x1a, 0x51,
		0x8a, 0x03, 0x73, 0x78, 0x6c, 0x9a, 0xb7, 0xe4, 0xdd, 0x43, 0xad, 0x7e,
		0xf4, 0xb1, 0x6f, 0x74, 0xc4, 0x8e, 0x1f, 0x3e, 0x7d, 0x6e, 0x6a, 0xed,
		0x43, 0x9d, 0x63, 0xc3, 0x96, 0x64, 0xea, 0xee, 0x2c, 0xd5, 0x47, 0x3f,
		0x05, 0x29, 0x3d, 0xf5, 0x7d, 0xa4, 0x1e, 0xd9, 0x78, 0x97, 0x00, 0x9d,
		0x86, 0x17, 0x33, 0x52, 0xa2, 0x68, 0x28, 0xd5, 0x4e, 0x4d, 0xa9, 0x8d,
		0x26, 0x48, 0x83, 0xf4, 0x7f, 0xa3, 0xd1, 0xef, 0x28, 0x01, 0x0f, 0x04,
		0x16, 0x13, 0xc3, 0x0e, 0xed, 0x44, 0xd0, 0x45, 0x3f, 0x02, 0x82, 0x46,
		0x46, 0x58, 0x4e, 0x47, 0xe2, 0x29, 0xca, 0xa0, 0x2c, 0x24, 0x28, 0x87,
		0x50, 0x48, 0xfc, 0xf6, 0x8d, 0x5a, 0x2e, 0x3d, 0xd7, 0x1e, 0x2f, 0x59,
		0xbb, 0xca, 0xf2, 0x80, 0x0c, 0x7b, 0x4c, 0x10, 0x8b, 0xad, 0xae, 0x3e,
		0xe2, 0xbd, 0x30, 0xc9, 0x02, 0x21, 0xfa, 0x40, 0x91, 0xa5, 0x72, 0xb2,
		0x12, 0xb3, 0xe5, 0x69, 0x61, 0x6e, 0x1c, 0x53, 0x4f, 0x71, 0x1e, 0xbe,
		0x45, 0xf0, 0xfd, 0xcb, 0xf3, 0x0f, 0x60, 0x49, 0x83, 0x71, 0x0c, 0xe0,
		0xbb, 0xe2, 0x5b, 0xb8, 0xd4, 0x3c, 0x78, 0x3c, 0x29, 0xa8, 0x5a, 0x5e,
		0x75, 0x73, 0xd3, 0xb8, 0x7d, 0xd7, 0xec, 0x52, 0x76, 0x73, 0xfa, 0x3d,
		0xd6, 0xfb, 0xbb, 0x0e, 0x4d, 0xa1, 0xd6, 0x46, 0x04, 0xd0, 0x7e, 0x5d,
		0xee, 0xde, 0xa1, 0x4d, 0x54, 0x1a, 0x56, 0x22, 0x51, 0x73, 0x68, 0xcb,
		0x88, 0x66, 0xe9, 0xc4, 0xd1, 0xb8, 0xfe, 0x0c, 0xb9, 0x86, 0xe8, 0x70,
		0xa4, 0x53, 0x0a, 0x55, 0x08, 0xd8, 0xc3, 0x7e, 0x30, 0xed, 0xf0, 0x3f,
		0x19, 0x30, 0xa5, 0xba, 0x25, 0xc0, 0x10, 0xc8, 0x69, 0xd2, 0x75, 0xa9,
		0x39, 0x29, 0xd5, 0x7a, 0x57, 0xb9, 0xd7, 0x20, 0xb6, 0xde, 0x5b, 0x42,
		0x77, 0x93, 0xe2, 0xb9, 0x83, 0xbc, 0xd5, 0xce, 0x64, 0xd5, 0xfb, 0x62,
		0x99, 0x9f, 0x33, 0xc8, 0x96, 0xe5, 0xf9, 0xc2, 0xde, 0x58, 0x0b, 0xde,
		0xd9, 0x03, 0x30, 0xfe, 0xce, 0x7f, 0x5a, 0x6c, 0x33, 0x8f, 0x00, 0x67,
		0xa8, 0x33, 0xdd, 0x2b, 0xc7, 0x89, 0x5e, 0x2f, 0xa9, 0x34, 0x75, 0x38,
		0x59, 0x5e, 0x63, 0xba, 0x78, 0xa8, 0xd7, 0x48, 0x4f, 0x30, 0xcf, 0xc2,
		0x80, 0x69, 0x90, 0xd5, 0xeb, 0x8b, 0xcf, 0xb9, 0x90, 0x5b, 0x46, 0x95,
		0x9d, 0x69, 0x0c, 0x7c, 0x98, 0x8d, 0x01, 0xce, 0xb7, 0x1b, 0xe9, 0xcf,
		0x64, 0x22, 0xc9, 0xb7, 0xfe, 0xf3, 0xe2, 0x9a, 0xf2, 0xe1, 0xd7, 0xe6,
		0xf8, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xfe, 0x32, 0xc3, 0x0a, 0x04,
		0x00, 0x00,
	},
		"json/pop.json",
	)
}

func json_push_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x84, 0x92,
		0xb1, 0x6e, 0xc2, 0x30, 0x10, 0x86, 0x67, 0x78, 0x8a, 0x93, 0xcb, 0x08,
		0x4d, 0x87, 0x4e, 0x6c, 0x7d, 0x83, 0x0e, 0x6c, 0x55, 0x07, 0x13, 0x1f,
		0xb1, 0x51, 0x62, 0xbb, 0xe7, 0x4b, 0x51, 0x55, 0xf1, 0xee, 0xf5, 0xd9,
		0x09, 0x20, 0x84, 0xd4, 0x2d, 0x7c, 0xfa, 0xef, 0xfb, 0xcf, 0x36, 0xbf,
		0x4b, 0x00, 0xe5, 0x8c, 0xda, 0x82, 0x6a, 0xe2, 0x98, 0xac, 0x5a, 0x0b,
		0x58, 0xa5, 0xd6, 0xe2, 0xa0, 0x85, 0x5a, 0xe6, 0xb8, 0x6d, 0x9a, 0x63,
		0x0a, 0x7e, 0x53, 0xe9, 0x73, 0xa0, 0xae, 0x31, 0xa4, 0x0f, 0xbc, 0x79,
		0x79, 0x6d, 0x2a, 0x7b, 0xaa, 0x73, 0xec, 0xb8, 0x47, 0x99, 0x5a, 0x5d,
		0x5d, 0x1d, 0x85, 0x31, 0x0a, 0x7b, 0xeb, 0x3a, 0xc2, 0x4e, 0xb3, 0x0b,
		0x3e, 0x81, 0xf6, 0x06, 0x76, 0x6e, 0xc0, 0x84, 0xe4, 0x30, 0xd5, 0xa4,
		0xc1, 0xd4, 0x92, 0x8b, 0x12, 0x28, 0xf9, 0x18, 0xd1, 0x9b, 0x1c, 0x85,
		0x6f, 0xdd, 0x8f, 0x08, 0x1c, 0xf2, 0xa7, 0xd1, 0xac, 0xe1, 0x76, 0x88,
		0x7f, 0x62, 0x69, 0x0c, 0xfb, 0x23, 0xb6, 0x5c, 0x99, 0x36, 0xc6, 0x89,
		0x45, 0xf7, 0xef, 0x14, 0x22, 0x12, 0x4b, 0x7a, 0x0b, 0x07, 0xdd, 0x27,
		0x2c, 0x81, 0x78, 0x8b, 0xe5, 0x0a, 0x16, 0x6a, 0x72, 0x4e, 0x3f, 0x17,
		0x17, 0x6f, 0x62, 0x72, 0xbe, 0x2b, 0xde, 0x4c, 0xef, 0x56, 0xdc, 0x59,
		0x04, 0xaf, 0x07, 0x84, 0x70, 0x00, 0xce, 0xdf, 0x55, 0x22, 0x9b, 0x9e,
		0xac, 0x6b, 0x6d, 0x61, 0x75, 0x79, 0x57, 0xe8, 0x1e, 0x41, 0x97, 0x53,
		0xa1, 0x51, 0x22, 0x3c, 0x8b, 0x36, 0xef, 0x53, 0x32, 0x53, 0x77, 0x01,
		0x73, 0xbb, 0x1f, 0x87, 0x3d, 0x92, 0x5a, 0xcf, 0xfc, 0x41, 0xff, 0xe5,
		0x72, 0xee, 0xe4, 0x00, 0xb3, 0xfd, 0x64, 0xd1, 0x3f, 0x92, 0x3b, 0xcf,
		0xd8, 0xfd, 0x63, 0xe7, 0xfc, 0x46, 0xa0, 0xf9, 0xe6, 0x3c, 0xe5, 0x05,
		0x62, 0xc8, 0xc3, 0x90, 0x6c, 0x18, 0x7b, 0x23, 0xc5, 0x84, 0x6d, 0xa0,
		0x6b, 0xf1, 0x72, 0x2a, 0x57, 0x84, 0x5f, 0xa3, 0x23, 0x94, 0xff, 0xd7,
		0x47, 0x5d, 0x66, 0x7e, 0xbb, 0xf9, 0xd0, 0x99, 0x7e, 0x2e, 0xcf, 0x7f,
		0x01, 0x00, 0x00, 0xff, 0xff, 0x35, 0xc8, 0xea, 0x4f, 0x87, 0x02, 0x00,
		0x00,
	},
		"json/push.json",
	)
}

func json_rollover_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x74, 0x52,
		0xcf, 0x4e, 0xf3, 0x30, 0x0c, 0xbf, 0xef, 0x29, 0xac, 0x7e, 0x3b, 0x7e,
		0xa3, 0x1c, 0x38, 0xed, 0x86, 0x78, 0x01, 0x24, 0xb8, 0x21, 0x0e, 0x5e,
		0xe2, 0xb6, 0x99, 0xda, 0x24, 0xd8, 0xee, 0x06, 0x9a, 0xf6, 0xee, 0x24,
		0xcd, 0x36, 0x3a, 0xc4, 0x6e, 0xed, 0xcf, 0xfe, 0xfd, 0xb1, 0x9d, 0xc3,
		0x02, 0xa0, 0x72, 0xb6, 0x5a, 0x43, 0x55, 0x73, 0xe8, 0xfb, 0xb0, 0x23,
		0xae, 0xfe, 0x67, 0x70, 0x29, 0xa6, 0xa3, 0x01, 0x73, 0xa5, 0x53, 0x8d,
		0xeb, 0xba, 0xde, 0x4a, 0xf0, 0xab, 0x82, 0xde, 0x05, 0x6e, 0x6b, 0xcb,
		0xd8, 0xe8, 0xea, 0xfe, 0xa1, 0x2e, 0xd8, 0xbf, 0xc2, 0x53, 0xa7, 0x3d,
		0x65, 0xd6, 0xf2, 0x5a, 0xaf, 0xe5, 0x30, 0xc6, 0x8c, 0x3f, 0x85, 0xd1,
		0x2b, 0xb1, 0x14, 0xd8, 0x92, 0x18, 0x76, 0x51, 0x5d, 0xf0, 0xb9, 0xf8,
		0x42, 0x2a, 0xa0, 0x1d, 0xc1, 0x99, 0x0c, 0x03, 0x29, 0x5a, 0x54, 0x84,
		0x26, 0x30, 0x20, 0x98, 0xc2, 0x3e, 0x79, 0x7d, 0xc5, 0xc9, 0x2a, 0x6c,
		0xb6, 0x64, 0xb4, 0x60, 0x68, 0xad, 0xcb, 0x6a, 0xd8, 0x3f, 0x73, 0x88,
		0xc4, 0xea, 0x48, 0x52, 0x4f, 0x83, 0xbd, 0xd0, 0xd4, 0x10, 0xe7, 0x70,
		0x9e, 0x3f, 0x61, 0x1e, 0x07, 0xba, 0xfc, 0xcd, 0x84, 0x45, 0xd9, 0xf9,
		0x76, 0x12, 0x9e, 0xf0, 0x5f, 0x69, 0x5f, 0x53, 0xd0, 0x4c, 0x85, 0xd0,
		0x4c, 0xa1, 0xcf, 0xe1, 0xa6, 0xf6, 0x63, 0x61, 0x55, 0x2e, 0x43, 0x3b,
		0xec, 0xff, 0xd2, 0xcf, 0xb5, 0xf6, 0x34, 0xcd, 0x4d, 0x83, 0x71, 0xd8,
		0xa4, 0x3d, 0x24, 0x0b, 0x21, 0x13, 0xbc, 0x15, 0xd8, 0x90, 0xee, 0x89,
		0x3c, 0x10, 0x9a, 0xee, 0xb2, 0xa8, 0x6b, 0x53, 0xfa, 0x8c, 0x4c, 0x22,
		0x45, 0xe6, 0x70, 0x43, 0xfd, 0x31, 0x49, 0x5c, 0xfa, 0xd2, 0x00, 0xa8,
		0xe0, 0x04, 0x28, 0x65, 0x1d, 0x51, 0xc9, 0xc2, 0xbe, 0x23, 0x4f, 0xf9,
		0x06, 0xf8, 0x73, 0x8e, 0x60, 0xcc, 0x98, 0x6e, 0x57, 0xcc, 0x16, 0x27,
		0xc3, 0x8a, 0xe9, 0x63, 0x74, 0x4c, 0xf9, 0x1d, 0xbd, 0xcd, 0x36, 0x9a,
		0x3e, 0xdf, 0x17, 0xc7, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x69, 0x99,
		0x87, 0x1c, 0x64, 0x02, 0x00, 0x00,
	},
		"json/rollover.json",
	)
}

func json_set_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x74, 0x91,
		0xb1, 0x4e, 0xc3, 0x30, 0x10, 0x86, 0xf7, 0x3c, 0x85, 0x65, 0x3a, 0xb6,
		0x98, 0x81, 0xa9, 0x2b, 0x2f, 0x80, 0x04, 0x1b, 0x62, 0x30, 0xf1, 0x25,
		0x71, 0x95, 0xda, 0xe6, 0xee, 0x02, 0x42, 0xa8, 0xef, 0x8e, 0xcf, 0x76,
		0xa3, 0x08, 0xc1, 0x78, 0x5f, 0xee, 0xff, 0xf2, 0x9f, 0xfc, 0xdd, 0x29,
		0xa5, 0xbd, 0xd3, 0x47, 0xa5, 0x0d, 0x01, 0xeb, 0xbd, 0xcc, 0x3b, 0xea,
		0x27, 0x38, 0x5b, 0x81, 0x13, 0x73, 0x3a, 0x1a, 0x73, 0xa2, 0x18, 0x0e,
		0x95, 0xde, 0x46, 0x1c, 0x8d, 0x43, 0x3b, 0xf0, 0xe1, 0xee, 0xde, 0x54,
		0x76, 0x53, 0x73, 0xec, 0x79, 0x06, 0x49, 0xed, 0x56, 0xd5, 0x88, 0x71,
		0x49, 0x82, 0x1e, 0xe2, 0x12, 0x18, 0x90, 0x2a, 0x76, 0x40, 0x3d, 0xfa,
		0xc4, 0x3e, 0x06, 0xf9, 0xf8, 0x04, 0x4c, 0x8a, 0x27, 0x50, 0x1f, 0x76,
		0x5e, 0x40, 0xc5, 0x41, 0x59, 0xd5, 0xd7, 0x40, 0x33, 0x7f, 0xa5, 0x22,
		0x8e, 0x6f, 0x27, 0xe8, 0x9b, 0xda, 0x3a, 0xe7, 0x45, 0x60, 0xe7, 0x47,
		0x8c, 0x09, 0x90, 0x3d, 0x50, 0xde, 0x19, 0xec, 0x4c, 0x50, 0x16, 0xd2,
		0x16, 0xcb, 0xa1, 0x99, 0x05, 0x7b, 0x86, 0x75, 0xda, 0x88, 0x89, 0xd1,
		0x87, 0xb1, 0x88, 0x0b, 0xff, 0x55, 0xf0, 0x39, 0x77, 0x93, 0xa8, 0x54,
		0x93, 0x9e, 0xd7, 0x72, 0x65, 0xfd, 0x52, 0x53, 0xba, 0x94, 0xff, 0x4b,
		0xee, 0xf3, 0xee, 0xd8, 0x4e, 0xf9, 0xd7, 0x0e, 0x9f, 0xf5, 0xfa, 0xe6,
		0xec, 0x9a, 0x57, 0x23, 0xbc, 0x2f, 0x1e, 0x41, 0x9e, 0xe8, 0x65, 0x73,
		0xc3, 0xfe, 0xfa, 0xbf, 0xcc, 0x5e, 0xbb, 0xcb, 0x4f, 0x00, 0x00, 0x00,
		0xff, 0xff, 0x80, 0x3e, 0x27, 0x17, 0xc8, 0x01, 0x00, 0x00,
	},
		"json/set.json",
	)
}

func json_sub_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x9c, 0x91,
		0xc1, 0x4e, 0xc3, 0x30, 0x0c, 0x86, 0xef, 0x7b, 0x0a, 0x2b, 0xec, 0xb8,
		0x51, 0x0e, 0x9c, 0xf6, 0x00, 0xdc, 0x90, 0x90, 0xe0, 0x86, 0x38, 0xa4,
		0x8d, 0xdb, 0x66, 0xca, 0x92, 0xe0, 0x38, 0x20, 0x84, 0xfa, 0xee, 0xc4,
		0x69, 0x57, 0x4d, 0x13, 0x5c, 0x38, 0xfa, 0xf7, 0xff, 0xfd, 0xb6, 0x93,
		0xef, 0x0d, 0x80, 0xb2, 0x46, 0x1d, 0x40, 0x35, 0x29, 0xb7, 0x6a, 0x27,
		0xf5, 0x36, 0x75, 0x23, 0x9e, 0xb4, 0x88, 0x23, 0x73, 0x3c, 0x34, 0xcd,
		0x31, 0x05, 0xbf, 0x9f, 0xd5, 0xdb, 0x40, 0x43, 0x63, 0x48, 0xf7, 0xbc,
		0xbf, 0xbb, 0x6f, 0x66, 0xed, 0x66, 0xe6, 0xd8, 0xb2, 0x43, 0xa1, 0xb6,
		0x6b, 0xd4, 0x40, 0x21, 0x47, 0x91, 0x1e, 0x35, 0x8f, 0xf0, 0x90, 0x7d,
		0xc7, 0x36, 0xf8, 0x34, 0x37, 0x09, 0x39, 0x93, 0x2f, 0x5d, 0xd9, 0x42,
		0xf8, 0xaf, 0x58, 0x71, 0x9f, 0x4f, 0x2d, 0x52, 0xf5, 0x14, 0xd5, 0x60,
		0xea, 0xc8, 0x46, 0xe1, 0xa4, 0xf9, 0x32, 0x22, 0x10, 0xa6, 0xec, 0x18,
		0x42, 0x0f, 0x5c, 0xaa, 0x32, 0x8c, 0x49, 0xd7, 0x60, 0x55, 0x90, 0xa9,
		0x66, 0x5f, 0x51, 0xcf, 0x8b, 0x27, 0x01, 0x7f, 0x06, 0xf8, 0xd0, 0x2e,
		0xe3, 0xb2, 0xc4, 0x79, 0x68, 0x68, 0x8f, 0xd8, 0xf1, 0xac, 0x69, 0x63,
		0xac, 0x90, 0xda, 0x3d, 0x51, 0x88, 0x48, 0x6c, 0x8b, 0xfb, 0x00, 0xbd,
		0x76, 0x09, 0xab, 0x21, 0x5e, 0xca, 0xcb, 0xf6, 0x0e, 0x7b, 0x5e, 0xab,
		0xbf, 0xae, 0xf9, 0xfd, 0x1e, 0x41, 0x41, 0x12, 0xb5, 0x37, 0xaa, 0xfa,
		0xa6, 0xe5, 0x78, 0xb2, 0xc3, 0xf8, 0xdf, 0xd4, 0xca, 0x5e, 0xc5, 0xae,
		0xef, 0x43, 0xf8, 0x9e, 0x2d, 0xa1, 0xfc, 0xfc, 0xeb, 0xc5, 0xfe, 0xbb,
		0xf3, 0xc8, 0xa2, 0xbd, 0x6d, 0xa6, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff,
		0x3a, 0xb3, 0x85, 0x16, 0x1f, 0x02, 0x00, 0x00,
	},
		"json/sub.json",
	)
}

func json_trim_json() ([]byte, error) {
	return bindata_read([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0xa4, 0x92,
		0x31, 0x8f, 0xdb, 0x30, 0x0c, 0x85, 0xf7, 0xfc, 0x0a, 0xc2, 0xcd, 0x98,
		0xd4, 0x1d, 0x3a, 0x65, 0xeb, 0xdc, 0xa1, 0x1d, 0xb2, 0x15, 0x01, 0xac,
		0x58, 0xb4, 0xac, 0xd4, 0x96, 0x54, 0x8a, 0x49, 0x61, 0x1c, 0xf2, 0xdf,
		0x4f, 0x94, 0x9c, 0x9c, 0xef, 0x90, 0xc3, 0x0d, 0x37, 0xfa, 0xf3, 0xe3,
		0x23, 0xf9, 0xa8, 0xa7, 0x15, 0x40, 0x65, 0x75, 0xb5, 0x83, 0xaa, 0x66,
		0xb2, 0x63, 0xb5, 0x11, 0xb0, 0x8e, 0x6d, 0x8f, 0xa3, 0x12, 0xda, 0x33,
		0x87, 0x5d, 0x5d, 0x9f, 0xa2, 0x77, 0xdb, 0x42, 0xbf, 0x7a, 0x32, 0xb5,
		0x26, 0xd5, 0xf1, 0xf6, 0xdb, 0xf7, 0xba, 0xb0, 0x2f, 0xa5, 0x8e, 0x2d,
		0x0f, 0x28, 0x55, 0xeb, 0x17, 0x2f, 0x43, 0xfe, 0x1c, 0x84, 0xfd, 0x30,
		0x86, 0xd0, 0x28, 0xb6, 0xde, 0x45, 0x50, 0x4e, 0xc3, 0xde, 0x8e, 0x18,
		0x91, 0x2c, 0xc6, 0xa2, 0xd4, 0x18, 0x5b, 0xb2, 0x41, 0x04, 0xa2, 0xdf,
		0x27, 0x8b, 0x08, 0x17, 0x35, 0x9c, 0x31, 0x42, 0x47, 0x7e, 0x04, 0x05,
		0x5a, 0xb1, 0x82, 0x52, 0x03, 0xc7, 0x09, 0xbc, 0x1b, 0x26, 0xf8, 0x8b,
		0x18, 0xac, 0x33, 0xa0, 0x18, 0x46, 0x1f, 0x19, 0x1a, 0x01, 0x4d, 0x91,
		0x06, 0x6f, 0x1d, 0xc7, 0x0d, 0x78, 0x12, 0xb9, 0xc6, 0x01, 0x59, 0xa4,
		0x78, 0x41, 0x9a, 0x16, 0x0a, 0xe0, 0x3e, 0x55, 0x07, 0xc2, 0x84, 0x92,
		0x73, 0x13, 0xad, 0x6b, 0xb1, 0x99, 0x77, 0x9a, 0x42, 0x5e, 0xc9, 0x1f,
		0x4f, 0xd8, 0x72, 0x61, 0x4a, 0x6b, 0x2b, 0x63, 0xaa, 0xe1, 0x37, 0xf9,
		0x80, 0xc4, 0xb2, 0xc3, 0x0e, 0x3a, 0x35, 0x44, 0xcc, 0x82, 0xb0, 0xc4,
		0x92, 0x71, 0x62, 0xf3, 0xaa, 0xb7, 0xef, 0x85, 0x75, 0x4c, 0x69, 0x39,
		0x93, 0xad, 0x33, 0x7f, 0x1b, 0x44, 0x8f, 0xe0, 0xd4, 0x88, 0xe0, 0xbb,
		0x34, 0x28, 0xde, 0xf6, 0x67, 0x0f, 0xff, 0x7b, 0xdb, 0xf6, 0x99, 0xe5,
		0x98, 0xc0, 0x66, 0x7a, 0x44, 0x50, 0x21, 0xa0, 0xd3, 0xa8, 0xab, 0x6c,
		0x79, 0x2d, 0xce, 0x95, 0x04, 0xf3, 0xa8, 0x7f, 0x4a, 0x00, 0x0d, 0xd2,
		0xbb, 0x03, 0xfc, 0x4c, 0x75, 0x25, 0x6b, 0x69, 0x35, 0xa8, 0x87, 0x21,
		0xbf, 0x6e, 0x95, 0x13, 0xfc, 0x5c, 0xaf, 0x85, 0x37, 0x10, 0xb6, 0x9e,
		0xd2, 0x3e, 0x72, 0xe4, 0x74, 0xcb, 0xf4, 0xf6, 0x90, 0xee, 0x67, 0x2a,
		0x8d, 0x57, 0x73, 0xf3, 0xca, 0x3b, 0xfc, 0xd5, 0x25, 0xab, 0x3f, 0x99,
		0xdf, 0x07, 0x20, 0xfc, 0x77, 0xb6, 0xe9, 0xc2, 0xf2, 0xe7, 0x76, 0x8b,
		0xcd, 0x9c, 0xc9, 0x61, 0x39, 0xfb, 0x47, 0x15, 0x65, 0xb5, 0xc3, 0xbd,
		0xeb, 0x61, 0x75, 0x7d, 0x0e, 0x00, 0x00, 0xff, 0xff, 0x84, 0x60, 0x37,
		0xeb, 0x46, 0x03, 0x00, 0x00,
	},
		"json/trim.json",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	if f, ok := _bindata[name]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"json/add.json":       json_add_json,
	"json/aggregate.json": json_aggregate_json,
	"json/anomaly.json":   json_anomaly_json,
	"json/compute.json":   json_compute_json,
	"json/div.json":       json_div_json,
	"json/eq.json":        json_eq_json,
	"json/extract.json":   json_extract_json,
	"json/get.json":       json_get_json,
	"json/gt.json":        json_gt_json,
	"json/gte.json":       json_gte_json,
	"json/if.json":        json_if_json,
	"json/incr.json":      json_incr_json,
	"json/last.json":      json_last_json,
	"json/lt.json":        json_lt_json,
	"json/lte.json":       json_lte_json,
	"json/mul.json":       json_mul_json,
	"json/neq.json":       json_neq_json,
	"json/pick.json":      json_pick_json,
	"json/pop.json":       json_pop_json,
	"json/push.json":      json_push_json,
	"json/rollover.json":  json_rollover_json,
	"json/set.json":       json_set_json,
	"json/sub.json":       json_sub_json,
	"json/trim.json":      json_trim_json,
}
